{
  "swagger": "2.0",
  "info": {
    "title": "Azure Storage resource management API.",
    "version": "2022-09-01",
    "description": "The Azure Storage Management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "StorageAccounts"
    },
    {
      "name": "DeletedAccounts"
    },
    {
      "name": "ManagementPolicies"
    },
    {
      "name": "BlobInventoryPolicies"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "ObjectReplicationPolicyOperationGroup"
    },
    {
      "name": "LocalUserOperationGroup"
    },
    {
      "name": "EncryptionScopes"
    },
    {
      "name": "BlobServices"
    },
    {
      "name": "BlobContainers"
    },
    {
      "name": "ImmutabilityPolicies"
    },
    {
      "name": "FileServices"
    },
    {
      "name": "FileShares"
    },
    {
      "name": "QueueServices"
    },
    {
      "name": "StorageQueues"
    },
    {
      "name": "TableServices"
    },
    {
      "name": "Tables"
    }
  ],
  "paths": {
    "/providers/Microsoft.Storage/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability": {
      "post": {
        "operationId": "StorageAccounts_CheckNameAvailability",
        "description": "Checks that the storage account name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountCheckNameAvailability": {
            "$ref": "./examples/StorageAccountCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts": {
      "get": {
        "operationId": "DeletedAccounts_List",
        "description": "Lists deleted accounts under the subscription.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeletedAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletedAccountList": {
            "$ref": "./examples/DeletedAccountList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts/{deletedAccountName}": {
      "get": {
        "operationId": "DeletedAccounts_Get",
        "tags": [
          "DeletedAccounts"
        ],
        "description": "Get properties of specified deleted account resource.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "deletedAccountName",
            "in": "path",
            "description": "Name of the deleted storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletedAccountGet": {
            "$ref": "./examples/DeletedAccountGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages": {
      "get": {
        "operationId": "Usages_ListByLocation",
        "description": "Gets the current usage count and the limit for the resources of the location under the subscription.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UsageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UsageList": {
            "$ref": "./examples/StorageAccountListLocationUsage.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus": {
      "get": {
        "operationId": "Skus_List",
        "description": "Lists the available SKUs supported by Microsoft.Storage for given subscription.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageSkuListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SkuList": {
            "$ref": "./examples/SKUList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts": {
      "get": {
        "operationId": "StorageAccounts_List",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountList": {
            "$ref": "./examples/StorageAccountList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts": {
      "get": {
        "operationId": "StorageAccounts_ListByResourceGroup",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListByResourceGroup": {
            "$ref": "./examples/StorageAccountListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}": {
      "get": {
        "operationId": "StorageAccounts_GetProperties",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.",
            "required": false,
            "type": "string",
            "enum": [
              "geoReplicationStats",
              "blobRestoreStatus"
            ],
            "x-ms-enum": {
              "name": "StorageAccountExpand",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetAsyncSkuConversionStatus": {
            "$ref": "./examples/StorageAccountGetAsyncSkuConversionStatus.json"
          },
          "StorageAccountGetProperties": {
            "$ref": "./examples/StorageAccountGetProperties.json"
          },
          "StorageAccountGetPropertiesCMKEnabled": {
            "$ref": "./examples/StorageAccountGetPropertiesCMKEnabled.json"
          },
          "StorageAccountGetPropertiesCMKVersionExpirationTime": {
            "$ref": "./examples/StorageAccountGetPropertiesCMKVersionExpirationTime.json"
          }
        }
      },
      "put": {
        "operationId": "StorageAccounts_Create",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide for the created account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NfsV3AccountCreate": {
            "$ref": "./examples/NfsV3AccountCreate.json"
          },
          "StorageAccountCreate": {
            "$ref": "./examples/StorageAccountCreate.json"
          },
          "StorageAccountCreateAllowedCopyScopeToAAD": {
            "$ref": "./examples/StorageAccountCreateAllowedCopyScopeToAAD.json"
          },
          "StorageAccountCreateAllowedCopyScopeToPrivateLink": {
            "$ref": "./examples/StorageAccountCreateAllowedCopyScopeToPrivateLink.json"
          },
          "StorageAccountCreateDisallowPublicNetworkAccess": {
            "$ref": "./examples/StorageAccountCreateDisallowPublicNetworkAccess.json"
          },
          "StorageAccountCreateDnsEndpointTypeToAzureDnsZone": {
            "$ref": "./examples/StorageAccountCreateDnsEndpointTypeToAzureDnsZone.json"
          },
          "StorageAccountCreateDnsEndpointTypeToStandard": {
            "$ref": "./examples/StorageAccountCreateDnsEndpointTypeToStandard.json"
          },
          "StorageAccountCreateEnablePublicNetworkAccess": {
            "$ref": "./examples/StorageAccountCreateEnablePublicNetworkAccess.json"
          },
          "StorageAccountCreatePremiumBlockBlobStorage": {
            "$ref": "./examples/StorageAccountCreatePremiumBlockBlobStorage.json"
          },
          "StorageAccountCreateUserAssignedEncryptionIdentityWithCMK": {
            "$ref": "./examples/StorageAccountCreateUserAssignedEncryptionIdentityWithCMK.json"
          },
          "StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.": {
            "$ref": "./examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json"
          },
          "StorageAccountCreateWithImmutabilityPolicy": {
            "$ref": "./examples/StorageAccountCreateWithImmutabilityPolicy.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StorageAccounts_Update",
        "tags": [
          "StorageAccounts"
        ],
        "description": "The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide for the updated account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountEnableAD": {
            "$ref": "./examples/StorageAccountEnableAD.json"
          },
          "StorageAccountEnableCMK": {
            "$ref": "./examples/StorageAccountEnableCMK.json"
          },
          "StorageAccountUpdate": {
            "$ref": "./examples/StorageAccountUpdate.json"
          },
          "StorageAccountUpdateAllowedCopyScopeToAAD": {
            "$ref": "./examples/StorageAccountUpdateAllowedCopyScopeToAAD.json"
          },
          "StorageAccountUpdateDisablePublicNetworkAccess": {
            "$ref": "./examples/StorageAccountUpdateDisablePublicNetworkAccess.json"
          },
          "StorageAccountUpdateUserAssignedEncryptionIdentityWithCMK": {
            "$ref": "./examples/StorageAccountUpdateUserAssignedEncryptionIdentityWithCMK.json"
          },
          "StorageAccountUpdateUserAssignedIdentityWithFederatedIdentityClientId": {
            "$ref": "./examples/StorageAccountUpdateUserAssignedIdentityWithFederatedIdentityClientId.json"
          },
          "StorageAccountUpdateWithImmutabilityPolicy": {
            "$ref": "./examples/StorageAccountUpdateWithImmutabilityPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "StorageAccounts_Delete",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Deletes a storage account in Microsoft Azure.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDelete": {
            "$ref": "./examples/StorageAccountDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration": {
      "post": {
        "operationId": "StorageAccounts_AbortHierarchicalNamespaceMigration",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Abort live Migration of storage account to enable Hns",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountAbortHierarchicalNamespaceMigration": {
            "$ref": "./examples/StorageAccountAbortHierarchicalNamespaceMigration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TypeSpec.Http.OkResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices": {
      "get": {
        "operationId": "BlobServices_List",
        "tags": [
          "BlobServices"
        ],
        "description": "List blob services of storage account. It returns a collection of one object named default.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobServiceItems"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListBlobServices": {
            "$ref": "./examples/BlobServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default": {
      "get": {
        "operationId": "BlobServices_GetServiceProperties",
        "tags": [
          "BlobServices"
        ],
        "description": "Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetBlobServices": {
            "$ref": "./examples/BlobServicesGet.json"
          }
        }
      },
      "put": {
        "operationId": "BlobServices_SetServiceProperties",
        "tags": [
          "BlobServices"
        ],
        "description": "Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlobServiceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BlobServiceProperties' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BlobServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BlobServicesPutAllowPermanentDelete": {
            "$ref": "./examples/BlobServicesPutAllowPermanentDelete.json"
          },
          "BlobServicesPutLastAccessTimeBasedTracking": {
            "$ref": "./examples/BlobServicesPutLastAccessTimeBasedTracking.json"
          },
          "PutBlobServices": {
            "$ref": "./examples/BlobServicesPut.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers": {
      "get": {
        "operationId": "BlobContainers_List",
        "tags": [
          "BlobContainers"
        ],
        "description": "Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional. Specified maximum number of containers that can be included in the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional. When specified, only container names starting with the filter will be listed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$include",
            "in": "query",
            "description": "Optional, used to include the properties for soft deleted blob containers.",
            "required": false,
            "type": "string",
            "enum": [
              "deleted"
            ],
            "x-ms-enum": {
              "name": "ListContainersInclude",
              "modelAsString": true,
              "values": [
                {
                  "name": "deleted",
                  "value": "deleted"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListContainerItems"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListContainers": {
            "$ref": "./examples/BlobContainersList.json"
          },
          "ListDeletedContainers": {
            "$ref": "./examples/DeletedBlobContainersList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}": {
      "get": {
        "operationId": "BlobContainers_Get",
        "tags": [
          "BlobContainers"
        ],
        "description": "Gets properties of a specified container.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetBlobContainersGetWithAllowProtectedAppendWritesAll": {
            "$ref": "./examples/BlobContainersGetWithAllowProtectedAppendWritesAll.json"
          },
          "GetContainers": {
            "$ref": "./examples/BlobContainersGet.json"
          }
        }
      },
      "put": {
        "operationId": "BlobContainers_Create",
        "tags": [
          "BlobContainers"
        ],
        "description": "Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "blobContainer",
            "in": "body",
            "description": "Properties of the blob container to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BlobContainer' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          },
          "201": {
            "description": "Resource 'BlobContainer' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PutContainerWithDefaultEncryptionScope": {
            "$ref": "./examples/BlobContainersPutDefaultEncryptionScope.json"
          },
          "PutContainerWithObjectLevelWorm": {
            "$ref": "./examples/BlobContainersPutObjectLevelWorm.json"
          },
          "PutContainers": {
            "$ref": "./examples/BlobContainersPut.json"
          }
        }
      },
      "patch": {
        "operationId": "BlobContainers_Update",
        "tags": [
          "BlobContainers"
        ],
        "description": "Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "blobContainer",
            "in": "body",
            "description": "Properties to update for the blob container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateContainers": {
            "$ref": "./examples/BlobContainersPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "BlobContainers_Delete",
        "tags": [
          "BlobContainers"
        ],
        "description": "Deletes specified container under its account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteContainers": {
            "$ref": "./examples/BlobContainersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold": {
      "post": {
        "operationId": "BlobContainers_ClearLegalHold",
        "tags": [
          "BlobContainers"
        ],
        "description": "Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "LegalHold",
            "in": "body",
            "description": "The LegalHold property that will be clear from a blob container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalHold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LegalHold"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClearLegalHoldContainers": {
            "$ref": "./examples/BlobContainersClearLegalHold.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default": {
      "get": {
        "operationId": "BlobContainers_GetImmutabilityPolicy",
        "tags": [
          "ImmutabilityPolicies"
        ],
        "description": "Gets the existing immutability policy along with the corresponding ETag in response headers and body.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetImmutabilityPolicy": {
            "$ref": "./examples/BlobContainersGetImmutabilityPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "BlobContainers_CreateOrUpdateImmutabilityPolicy",
        "tags": [
          "ImmutabilityPolicies"
        ],
        "description": "Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The ImmutabilityPolicy Properties that will be created or updated to a blob container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ImmutabilityPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateImmutabilityPolicy": {
            "$ref": "./examples/BlobContainersPutImmutabilityPolicy.json"
          },
          "CreateOrUpdateImmutabilityPolicyWithAllowProtectedAppendWritesAll": {
            "$ref": "./examples/BlobContainersPutImmutabilityPolicyAllowProtectedAppendWritesAll.json"
          }
        }
      },
      "delete": {
        "operationId": "BlobContainers_DeleteImmutabilityPolicy",
        "tags": [
          "ImmutabilityPolicies"
        ],
        "description": "Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteImmutabilityPolicy": {
            "$ref": "./examples/BlobContainersDeleteImmutabilityPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend": {
      "post": {
        "operationId": "BlobContainers_ExtendImmutabilityPolicy",
        "tags": [
          "ImmutabilityPolicies"
        ],
        "description": "Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The ImmutabilityPolicy Properties that will be extended for a blob container.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExtendImmutabilityPolicy": {
            "$ref": "./examples/BlobContainersExtendImmutabilityPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock": {
      "post": {
        "operationId": "BlobContainers_LockImmutabilityPolicy",
        "tags": [
          "ImmutabilityPolicies"
        ],
        "description": "Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImmutabilityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LockImmutabilityPolicy": {
            "$ref": "./examples/BlobContainersLockImmutabilityPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease": {
      "post": {
        "operationId": "BlobContainers_Lease",
        "tags": [
          "BlobContainers"
        ],
        "description": "The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Lease Container request body.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LeaseContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LeaseContainerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Acquire a lease on a container": {
            "$ref": "./examples/BlobContainersLease_Acquire.json"
          },
          "Break a lease on a container": {
            "$ref": "./examples/BlobContainersLease_Break.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate": {
      "post": {
        "operationId": "BlobContainers_ObjectLevelWorm",
        "tags": [
          "BlobContainers"
        ],
        "description": "This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VersionLevelWormContainerMigration": {
            "$ref": "./examples/ObjectLevelWormContainerMigration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TypeSpec.Http.OkResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold": {
      "post": {
        "operationId": "BlobContainers_SetLegalHold",
        "tags": [
          "BlobContainers"
        ],
        "description": "Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "LegalHold",
            "in": "body",
            "description": "The LegalHold property that will be set to a blob container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalHold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LegalHold"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SetLegalHoldContainers": {
            "$ref": "./examples/BlobContainersSetLegalHold.json"
          },
          "SetLegalHoldContainersWithAllowProtectedAppendWritesAll": {
            "$ref": "./examples/BlobContainersSetLegalHoldAllowProtectedAppendWritesAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes": {
      "get": {
        "operationId": "EncryptionScopes_List",
        "tags": [
          "EncryptionScopes"
        ],
        "description": "Lists all the encryption scopes available under the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, specifies the maximum number of encryption scopes that will be included in the list response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 5000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional. When specified, only encryption scope names starting with the filter will be listed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$include",
            "in": "query",
            "description": "Optional, when specified, will list encryption scopes with the specific state. Defaults to All",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Enabled",
              "Disabled"
            ],
            "x-ms-enum": {
              "name": "ListEncryptionScopesInclude",
              "modelAsString": true,
              "values": [
                {
                  "name": "All",
                  "value": "All"
                },
                {
                  "name": "Enabled",
                  "value": "Enabled"
                },
                {
                  "name": "Disabled",
                  "value": "Disabled"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EncryptionScopeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountEncryptionScopeList": {
            "$ref": "./examples/StorageAccountEncryptionScopeList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}": {
      "get": {
        "operationId": "EncryptionScopes_Get",
        "tags": [
          "EncryptionScopes"
        ],
        "description": "Returns the properties for the specified encryption scope.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "encryptionScopeName",
            "in": "path",
            "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetEncryptionScope": {
            "$ref": "./examples/StorageAccountGetEncryptionScope.json"
          }
        }
      },
      "put": {
        "operationId": "EncryptionScopes_Put",
        "tags": [
          "EncryptionScopes"
        ],
        "description": "Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "encryptionScopeName",
            "in": "path",
            "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "encryptionScope",
            "in": "body",
            "description": "Encryption scope properties to be used for the create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EncryptionScope' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          },
          "201": {
            "description": "Resource 'EncryptionScope' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountPutEncryptionScope": {
            "$ref": "./examples/StorageAccountPutEncryptionScope.json"
          },
          "StorageAccountPutEncryptionScopeWithInfrastructureEncryption": {
            "$ref": "./examples/StorageAccountPutEncryptionScopeWithInfrastructureEncryption.json"
          }
        }
      },
      "patch": {
        "operationId": "EncryptionScopes_Patch",
        "tags": [
          "EncryptionScopes"
        ],
        "description": "Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "encryptionScopeName",
            "in": "path",
            "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "encryptionScope",
            "in": "body",
            "description": "Encryption scope properties to be used for the update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EncryptionScope"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountPatchEncryptionScope": {
            "$ref": "./examples/StorageAccountPatchEncryptionScope.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover": {
      "post": {
        "operationId": "StorageAccounts_Failover",
        "tags": [
          "StorageAccounts"
        ],
        "description": "A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "failoverType",
            "in": "query",
            "description": "The parameter is set to 'Planned' to indicate whether a Planned failover is requested.",
            "required": false,
            "type": "string",
            "enum": [
              "Planned"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountFailover": {
            "$ref": "./examples/StorageAccountFailover.json"
          },
          "StorageAccountFailoverPlanned": {
            "$ref": "./examples/StorageAccountFailoverPlanned.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TypeSpec.Http.OkResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices": {
      "get": {
        "operationId": "FileServices_List",
        "tags": [
          "FileServices"
        ],
        "description": "List all file services in storage accounts",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FileServiceItems"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListFileServices": {
            "$ref": "./examples/FileServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default": {
      "get": {
        "operationId": "FileServices_GetServiceProperties",
        "tags": [
          "FileServices"
        ],
        "description": "Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FileServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetFileServices": {
            "$ref": "./examples/FileServicesGet.json"
          }
        }
      },
      "put": {
        "operationId": "FileServices_SetServiceProperties",
        "tags": [
          "FileServices"
        ],
        "description": "Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileServiceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FileServiceProperties' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FileServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PutFileServices": {
            "$ref": "./examples/FileServicesPut.json"
          },
          "PutFileServices_EnableSMBMultichannel": {
            "$ref": "./examples/FileServicesPut_EnableSMBMultichannel.json"
          },
          "PutFileServices_EnableSecureSmbFeatures": {
            "$ref": "./examples/FileServicesPut_EnableSecureSmbFeatures.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares": {
      "get": {
        "operationId": "FileShares_List",
        "tags": [
          "FileShares"
        ],
        "description": "Lists all shares.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional. Specified maximum number of shares that can be included in the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional. When specified, only share names starting with the filter will be listed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FileShareItems"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListDeletedShares": {
            "$ref": "./examples/DeletedFileSharesList.json"
          },
          "ListShareSnapshots": {
            "$ref": "./examples/FileShareSnapshotsList.json"
          },
          "ListShares": {
            "$ref": "./examples/FileSharesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}": {
      "get": {
        "operationId": "FileShares_Get",
        "tags": [
          "FileShares"
        ],
        "description": "Gets properties of a specified share.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-ms-snapshot",
            "in": "header",
            "description": "Optional, used to retrieve properties of a snapshot.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetShareStats": {
            "$ref": "./examples/FileSharesGet_Stats.json"
          },
          "GetShares": {
            "$ref": "./examples/FileSharesGet.json"
          }
        }
      },
      "put": {
        "operationId": "FileShares_Create",
        "tags": [
          "FileShares"
        ],
        "description": "Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileShare",
            "in": "body",
            "description": "Properties of the file share to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FileShare' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "201": {
            "description": "Resource 'FileShare' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create NFS Shares": {
            "$ref": "./examples/FileSharesPut_NFS.json"
          },
          "PutShares": {
            "$ref": "./examples/FileSharesPut.json"
          },
          "PutShares with Access Tier": {
            "$ref": "./examples/FileSharesPut_AccessTier.json"
          }
        }
      },
      "patch": {
        "operationId": "FileShares_Update",
        "tags": [
          "FileShares"
        ],
        "description": "Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "fileShare",
            "in": "body",
            "description": "Properties to update for the file share.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateShareAcls": {
            "$ref": "./examples/FileShareAclsPatch.json"
          },
          "UpdateShares": {
            "$ref": "./examples/FileSharesPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "FileShares_Delete",
        "tags": [
          "FileShares"
        ],
        "description": "Deletes specified share under its account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "x-ms-snapshot",
            "in": "header",
            "description": "Optional, used to delete a snapshot.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$include",
            "in": "query",
            "description": "Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteShares": {
            "$ref": "./examples/FileSharesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease": {
      "post": {
        "operationId": "FileShares_Lease",
        "tags": [
          "FileShares"
        ],
        "description": "The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "x-ms-snapshot",
            "in": "header",
            "description": "Optional. Specify the snapshot time to lease a snapshot.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Lease Share request body.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LeaseShareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LeaseShareResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Acquire a lease on a share": {
            "$ref": "./examples/FileSharesLease_Acquire.json"
          },
          "Break a lease on a share": {
            "$ref": "./examples/FileSharesLease_Break.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore": {
      "post": {
        "operationId": "FileShares_Restore",
        "tags": [
          "FileShares"
        ],
        "description": "Restore a file share within a valid retention days if share soft delete is enabled",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "deletedShare",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletedShare"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RestoreShares": {
            "$ref": "./examples/FileSharesRestore.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration": {
      "post": {
        "operationId": "StorageAccounts_HierarchicalNamespaceMigration",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Live Migration of storage account to enable Hns",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "requestType",
            "in": "query",
            "description": "Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountHierarchicalNamespaceMigration": {
            "$ref": "./examples/StorageAccountHierarchicalNamespaceMigration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TypeSpec.Http.OkResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies": {
      "get": {
        "operationId": "BlobInventoryPolicies_List",
        "tags": [
          "BlobInventoryPolicies"
        ],
        "description": "Gets the blob inventory policy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListBlobInventoryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetBlobInventoryPolicy": {
            "$ref": "./examples/StorageAccountListBlobInventoryPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}": {
      "get": {
        "operationId": "BlobInventoryPolicies_Get",
        "tags": [
          "BlobInventoryPolicies"
        ],
        "description": "Gets the blob inventory policy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "blobInventoryPolicyName",
            "in": "path",
            "description": "The name of the storage account blob inventory policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobInventoryPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobInventoryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetBlobInventoryPolicy": {
            "$ref": "./examples/StorageAccountGetBlobInventoryPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "BlobInventoryPolicies_CreateOrUpdate",
        "tags": [
          "BlobInventoryPolicies"
        ],
        "description": "Sets the blob inventory policy to the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "blobInventoryPolicyName",
            "in": "path",
            "description": "The name of the storage account blob inventory policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobInventoryPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The blob inventory policy set to a storage account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlobInventoryPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BlobInventoryPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BlobInventoryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountSetBlobInventoryPolicy": {
            "$ref": "./examples/StorageAccountSetBlobInventoryPolicy.json"
          },
          "StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForHnsAccount": {
            "$ref": "./examples/StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForHnsAccount.json"
          },
          "StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForNonHnsAccount": {
            "$ref": "./examples/StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForNonHnsAccount.json"
          }
        }
      },
      "delete": {
        "operationId": "BlobInventoryPolicies_Delete",
        "tags": [
          "BlobInventoryPolicies"
        ],
        "description": "Deletes the blob inventory policy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "blobInventoryPolicyName",
            "in": "path",
            "description": "The name of the storage account blob inventory policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobInventoryPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDeleteBlobInventoryPolicy": {
            "$ref": "./examples/StorageAccountDeleteBlobInventoryPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listAccountSas": {
      "post": {
        "operationId": "StorageAccounts_ListAccountSAS",
        "tags": [
          "StorageAccounts"
        ],
        "description": "List SAS credentials of a storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to list SAS credentials for the storage account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSasParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListAccountSasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListAccountSAS": {
            "$ref": "./examples/StorageAccountListAccountSAS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys": {
      "post": {
        "operationId": "StorageAccounts_ListKeys",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specifies type of the key to be listed. Possible value is kerb.",
            "required": false,
            "type": "string",
            "enum": [
              "kerb"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListKeysResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListKeys": {
            "$ref": "./examples/StorageAccountListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listServiceSas": {
      "post": {
        "operationId": "StorageAccounts_ListServiceSAS",
        "tags": [
          "StorageAccounts"
        ],
        "description": "List service SAS credentials of a specific resource.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to list service SAS credentials.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceSasParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListServiceSasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListServiceSAS": {
            "$ref": "./examples/StorageAccountListServiceSAS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers": {
      "get": {
        "operationId": "LocalUsers_List",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "List the local users associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocalUsers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListLocalUsers": {
            "$ref": "./examples/LocalUsersList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}": {
      "get": {
        "operationId": "LocalUsers_Get",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "Get the local user of the storage account by username.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocalUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetLocalUser": {
            "$ref": "./examples/LocalUserGet.json"
          }
        }
      },
      "put": {
        "operationId": "LocalUsers_CreateOrUpdate",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "Create or update the properties of a local user associated with the storage account",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The local user associated with a storage account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'LocalUser' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/LocalUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateLocalUser": {
            "$ref": "./examples/LocalUserCreate.json"
          },
          "UpdateLocalUser": {
            "$ref": "./examples/LocalUserUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "LocalUsers_Delete",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "Deletes the local user associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteLocalUser": {
            "$ref": "./examples/LocalUserDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys": {
      "post": {
        "operationId": "LocalUsers_ListKeys",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "List SSH authorized keys and shared key of the local user.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocalUserKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListLocalUserKeys": {
            "$ref": "./examples/LocalUserListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword": {
      "post": {
        "operationId": "LocalUsers_RegeneratePassword",
        "tags": [
          "LocalUserOperationGroup"
        ],
        "description": "Regenerate the local user SSH password.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocalUserRegeneratePasswordResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateLocalUserPassword": {
            "$ref": "./examples/LocalUserRegeneratePassword.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}": {
      "get": {
        "operationId": "ManagementPolicies_Get",
        "tags": [
          "ManagementPolicies"
        ],
        "description": "Gets the managementpolicy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "managementPolicyName",
            "in": "path",
            "description": "The name of the Storage Account Management Policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ManagementPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagementPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetManagementPolicies": {
            "$ref": "./examples/StorageAccountGetManagementPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "ManagementPolicies_CreateOrUpdate",
        "tags": [
          "ManagementPolicies"
        ],
        "description": "Sets the managementpolicy to the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "managementPolicyName",
            "in": "path",
            "description": "The name of the Storage Account Management Policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ManagementPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The ManagementPolicy set to a storage account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagementPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagementPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagementPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountSetManagementPolicies": {
            "$ref": "./examples/StorageAccountSetManagementPolicy.json"
          },
          "StorageAccountSetManagementPolicyColdTierActions": {
            "$ref": "./examples/StorageAccountSetManagementPolicyColdTierActions.json"
          },
          "StorageAccountSetManagementPolicyForBlockAndAppendBlobs": {
            "$ref": "./examples/StorageAccountSetManagementPolicyForBlockAndAppendBlobs.json"
          },
          "StorageAccountSetManagementPolicyHotTierActions": {
            "$ref": "./examples/StorageAccountSetManagementPolicyHotTierActions.json"
          },
          "StorageAccountSetManagementPolicyWithSnapshotAndVersion": {
            "$ref": "./examples/StorageAccountSetManagementPolicyWithSnapshotAndVersion.json"
          },
          "StorageAccountSetManagementPolicy_BaseBlobDaysAfterCreationActions": {
            "$ref": "./examples/StorageAccountSetManagementPolicy_BaseBlobDaysAfterCreationActions.json"
          },
          "StorageAccountSetManagementPolicy_LastAccessTimeBasedBlobActions": {
            "$ref": "./examples/StorageAccountSetManagementPolicy_LastAccessTimeBasedBlobActions.json"
          },
          "StorageAccountSetManagementPolicy_LastTierChangeTimeActions": {
            "$ref": "./examples/StorageAccountSetManagementPolicy_LastTierChangeTimeActions.json"
          }
        }
      },
      "delete": {
        "operationId": "ManagementPolicies_Delete",
        "tags": [
          "ManagementPolicies"
        ],
        "description": "Deletes the managementpolicy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "managementPolicyName",
            "in": "path",
            "description": "The name of the Storage Account Management Policy. It should always be 'default'",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ManagementPolicyName",
              "modelAsString": true,
              "values": [
                {
                  "name": "default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDeleteManagementPolicies": {
            "$ref": "./examples/StorageAccountDeleteManagementPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies": {
      "get": {
        "operationId": "ObjectReplicationPolicies_List",
        "tags": [
          "ObjectReplicationPolicyOperationGroup"
        ],
        "description": "List the object replication policies associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ObjectReplicationPolicies"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListObjectReplicationPolicies": {
            "$ref": "./examples/StorageAccountListObjectReplicationPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}": {
      "get": {
        "operationId": "ObjectReplicationPolicies_Get",
        "tags": [
          "ObjectReplicationPolicyOperationGroup"
        ],
        "description": "Get the object replication policy of the storage account by policy ID.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "objectReplicationPolicyId",
            "in": "path",
            "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ObjectReplicationPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetObjectReplicationPolicies": {
            "$ref": "./examples/StorageAccountGetObjectReplicationPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "ObjectReplicationPolicies_CreateOrUpdate",
        "tags": [
          "ObjectReplicationPolicyOperationGroup"
        ],
        "description": "Create or update the object replication policy of the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "objectReplicationPolicyId",
            "in": "path",
            "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The object replication policy set to a storage account. A unique policy ID will be created if absent.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectReplicationPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ObjectReplicationPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ObjectReplicationPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountCreateObjectReplicationPolicyOnDestination": {
            "$ref": "./examples/StorageAccountCreateObjectReplicationPolicyOnDestination.json"
          },
          "StorageAccountCreateObjectReplicationPolicyOnSource": {
            "$ref": "./examples/StorageAccountCreateObjectReplicationPolicyOnSource.json"
          },
          "StorageAccountUpdateObjectReplicationPolicyOnDestination": {
            "$ref": "./examples/StorageAccountUpdateObjectReplicationPolicyOnDestination.json"
          },
          "StorageAccountUpdateObjectReplicationPolicyOnSource": {
            "$ref": "./examples/StorageAccountUpdateObjectReplicationPolicyOnSource.json"
          }
        }
      },
      "delete": {
        "operationId": "ObjectReplicationPolicies_Delete",
        "tags": [
          "ObjectReplicationPolicyOperationGroup"
        ],
        "description": "Deletes the object replication policy associated with the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "objectReplicationPolicyId",
            "in": "path",
            "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDeleteObjectReplicationPolicies": {
            "$ref": "./examples/StorageAccountDeleteObjectReplicationPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all the private endpoint connections associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListPrivateEndpointConnections": {
            "$ref": "./examples/StorageAccountListPrivateEndpointConnections.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetPrivateEndpointConnection": {
            "$ref": "./examples/StorageAccountGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Put",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountPutPrivateEndpointConnection": {
            "$ref": "./examples/StorageAccountPutPrivateEndpointConnection.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDeletePrivateEndpointConnection": {
            "$ref": "./examples/StorageAccountDeletePrivateEndpointConnection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByStorageAccount",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Gets the private link resources that need to be created for a storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListPrivateLinkResources": {
            "$ref": "./examples/StorageAccountListPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices": {
      "get": {
        "operationId": "QueueServices_List",
        "tags": [
          "QueueServices"
        ],
        "description": "List all queue services for the storage account",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListQueueServices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueServicesList": {
            "$ref": "./examples/QueueServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default": {
      "get": {
        "operationId": "QueueServices_GetServiceProperties",
        "tags": [
          "QueueServices"
        ],
        "description": "Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QueueServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueServicesGet": {
            "$ref": "./examples/QueueServicesGet.json"
          }
        }
      },
      "put": {
        "operationId": "QueueServices_SetServiceProperties",
        "tags": [
          "QueueServices"
        ],
        "description": "Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueueServiceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'QueueServiceProperties' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/QueueServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueServicesPut": {
            "$ref": "./examples/QueueServicesPut.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues": {
      "get": {
        "operationId": "Queue_List",
        "tags": [
          "StorageQueues"
        ],
        "description": "Gets a list of all the queues under the specified storage account",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, a maximum number of queues that should be included in a list queue response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional, When specified, only the queues with a name starting with the given filter will be listed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListQueueResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueOperationList": {
            "$ref": "./examples/QueueOperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}": {
      "get": {
        "operationId": "Queue_Get",
        "tags": [
          "StorageQueues"
        ],
        "description": "Gets the queue with the specified queue name, under the specified account if it exists.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueOperationGet": {
            "$ref": "./examples/QueueOperationGet.json"
          }
        }
      },
      "put": {
        "operationId": "Queue_Create",
        "tags": [
          "StorageQueues"
        ],
        "description": "Creates a new queue with the specified queue name, under the specified account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$"
          },
          {
            "name": "queue",
            "in": "body",
            "description": "Queue properties and metadata to be created with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageQueue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageQueue' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueOperationPut": {
            "$ref": "./examples/QueueOperationPut.json"
          },
          "QueueOperationPutWithMetadata": {
            "$ref": "./examples/QueueOperationPutWithMetadata.json"
          }
        }
      },
      "patch": {
        "operationId": "Queue_Update",
        "tags": [
          "StorageQueues"
        ],
        "description": "Creates a new queue with the specified queue name, under the specified account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$"
          },
          {
            "name": "queue",
            "in": "body",
            "description": "Queue properties and metadata to be created with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageQueue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueOperationPatch": {
            "$ref": "./examples/QueueOperationPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Queue_Delete",
        "tags": [
          "StorageQueues"
        ],
        "description": "Deletes the queue with the specified queue name, under the specified account if it exists.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueueOperationDelete": {
            "$ref": "./examples/QueueOperationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey": {
      "post": {
        "operationId": "StorageAccounts_RegenerateKey",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Regenerates one of the access keys or Kerberos keys for the specified storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "regenerateKey",
            "in": "body",
            "description": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountRegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListKeysResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountRegenerateKerbKey": {
            "$ref": "./examples/StorageAccountRegenerateKerbKey.json"
          },
          "StorageAccountRegenerateKey": {
            "$ref": "./examples/StorageAccountRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges": {
      "post": {
        "operationId": "StorageAccounts_RestoreBlobRanges",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Restore blobs in the specified blob ranges",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide for restore blob ranges.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlobRestoreParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BlobRestoreStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BlobRangesRestore": {
            "$ref": "./examples/BlobRangesRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Azure.ResourceManager.ArmResponse%3CBlobRestoreStatus%3E"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys": {
      "post": {
        "operationId": "StorageAccounts_RevokeUserDelegationKeys",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Revoke user delegation keys.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountRevokeUserDelegationKeys": {
            "$ref": "./examples/StorageAccountRevokeUserDelegationKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices": {
      "get": {
        "operationId": "TableServices_List",
        "tags": [
          "TableServices"
        ],
        "description": "List all table services for the storage account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListTableServices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableServicesList": {
            "$ref": "./examples/TableServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default": {
      "get": {
        "operationId": "TableServices_GetServiceProperties",
        "tags": [
          "TableServices"
        ],
        "description": "Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableServicesGet": {
            "$ref": "./examples/TableServicesGet.json"
          }
        }
      },
      "put": {
        "operationId": "TableServices_SetServiceProperties",
        "tags": [
          "TableServices"
        ],
        "description": "Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableServiceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TableServiceProperties' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TableServiceProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableServicesPut": {
            "$ref": "./examples/TableServicesPut.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables": {
      "get": {
        "operationId": "Table_List",
        "tags": [
          "Tables"
        ],
        "description": "Gets a list of all the tables under the specified storage account",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListTableResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableOperationList": {
            "$ref": "./examples/TableOperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}": {
      "get": {
        "operationId": "Table_Get",
        "tags": [
          "Tables"
        ],
        "description": "Gets the table with the specified table name, under the specified account if it exists.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Table"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableOperationGet": {
            "$ref": "./examples/TableOperationGet.json"
          }
        }
      },
      "put": {
        "operationId": "Table_Create",
        "tags": [
          "Tables"
        ],
        "description": "Creates a new table with the specified table name, under the specified account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to create a table.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Table"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Table' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Table"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableOperationPut": {
            "$ref": "./examples/TableOperationPut.json"
          }
        }
      },
      "patch": {
        "operationId": "Table_Update",
        "tags": [
          "Tables"
        ],
        "description": "Creates a new table with the specified table name, under the specified account.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to create a table.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Table"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Table"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableOperationPatch": {
            "$ref": "./examples/TableOperationPatch.json"
          },
          "TableOperationPutOrPatchAcls": {
            "$ref": "./examples/TableOperationPutOrPatchAcls.json"
          }
        }
      },
      "delete": {
        "operationId": "Table_Delete",
        "tags": [
          "Tables"
        ],
        "description": "Deletes the table with the specified table name, under the specified account if it exists.",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TableOperationDelete": {
            "$ref": "./examples/TableOperationDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessPolicy": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the access policy"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry time of the access policy"
        },
        "permission": {
          "type": "string",
          "description": "List of abbreviated permissions."
        }
      }
    },
    "AccessTier": {
      "type": "string",
      "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.",
      "enum": [
        "Hot",
        "Cool",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "AccessTier",
        "modelAsString": false
      }
    },
    "AccountImmutabilityPolicyProperties": {
      "type": "object",
      "description": "This defines account-level immutability policy properties.",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "minimum": 1,
          "maximum": 146000
        },
        "state": {
          "$ref": "#/definitions/AccountImmutabilityPolicyState",
          "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted."
        },
        "allowProtectedAppendWrites": {
          "type": "boolean",
          "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted."
        }
      }
    },
    "AccountImmutabilityPolicyState": {
      "type": "string",
      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
      "enum": [
        "Unlocked",
        "Locked",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "AccountImmutabilityPolicyState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unlocked",
            "value": "Unlocked"
          },
          {
            "name": "Locked",
            "value": "Locked"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "AccountSasParameters": {
      "type": "object",
      "description": "The parameters to list SAS credentials of a storage account.",
      "properties": {
        "signedServices": {
          "$ref": "#/definitions/Services",
          "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).",
          "x-ms-client-name": "services"
        },
        "signedResourceTypes": {
          "$ref": "#/definitions/SignedResourceTypes",
          "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.",
          "x-ms-client-name": "resourceTypes"
        },
        "signedPermission": {
          "$ref": "#/definitions/Permissions",
          "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
          "x-ms-client-name": "permissions"
        },
        "signedIp": {
          "type": "string",
          "description": "An IP address or a range of IP addresses from which to accept requests.",
          "x-ms-client-name": "IPAddressOrRange"
        },
        "signedProtocol": {
          "$ref": "#/definitions/HttpProtocol",
          "description": "The protocol permitted for a request made with the account SAS.",
          "x-ms-client-name": "protocols"
        },
        "signedStart": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the SAS becomes valid.",
          "x-ms-client-name": "sharedAccessStartTime"
        },
        "signedExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the shared access signature becomes invalid.",
          "x-ms-client-name": "sharedAccessExpiryTime"
        },
        "keyToSign": {
          "type": "string",
          "description": "The key to sign the account SAS token with."
        }
      },
      "required": [
        "signedServices",
        "signedResourceTypes",
        "signedPermission",
        "signedExpiry"
      ]
    },
    "AccountStatus": {
      "type": "string",
      "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
      "enum": [
        "available",
        "unavailable"
      ],
      "x-ms-enum": {
        "name": "AccountStatus",
        "modelAsString": false
      }
    },
    "AccountType": {
      "type": "string",
      "description": "Specifies the Active Directory account type for Azure Storage.",
      "enum": [
        "User",
        "Computer"
      ],
      "x-ms-enum": {
        "name": "AccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User"
          },
          {
            "name": "Computer",
            "value": "Computer"
          }
        ]
      }
    },
    "ActiveDirectoryProperties": {
      "type": "object",
      "description": "Settings properties for Active Directory (AD).",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "Specifies the primary domain that the AD DNS server is authoritative for."
        },
        "netBiosDomainName": {
          "type": "string",
          "description": "Specifies the NetBIOS domain name."
        },
        "forestName": {
          "type": "string",
          "description": "Specifies the Active Directory forest to get."
        },
        "domainGuid": {
          "type": "string",
          "description": "Specifies the domain GUID."
        },
        "domainSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID)."
        },
        "azureStorageSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID) for Azure Storage."
        },
        "samAccountName": {
          "type": "string",
          "description": "Specifies the Active Directory SAMAccountName for Azure Storage."
        },
        "accountType": {
          "$ref": "#/definitions/AccountType",
          "description": "Specifies the Active Directory account type for Azure Storage."
        }
      },
      "required": [
        "domainName",
        "domainGuid"
      ]
    },
    "AllowedCopyScope": {
      "type": "string",
      "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
      "enum": [
        "PrivateLink",
        "AAD"
      ],
      "x-ms-enum": {
        "name": "AllowedCopyScope",
        "modelAsString": true,
        "values": [
          {
            "name": "PrivateLink",
            "value": "PrivateLink"
          },
          {
            "name": "AAD",
            "value": "AAD"
          }
        ]
      }
    },
    "AllowedMethods": {
      "type": "string",
      "enum": [
        "DELETE",
        "GET",
        "HEAD",
        "MERGE",
        "POST",
        "OPTIONS",
        "PUT",
        "PATCH"
      ],
      "x-ms-enum": {
        "name": "AllowedMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "DELETE",
            "value": "DELETE"
          },
          {
            "name": "GET",
            "value": "GET"
          },
          {
            "name": "HEAD",
            "value": "HEAD"
          },
          {
            "name": "MERGE",
            "value": "MERGE"
          },
          {
            "name": "POST",
            "value": "POST"
          },
          {
            "name": "OPTIONS",
            "value": "OPTIONS"
          },
          {
            "name": "PUT",
            "value": "PUT"
          },
          {
            "name": "PATCH",
            "value": "PATCH"
          }
        ]
      }
    },
    "Azure.ResourceManager.ArmResponse<BlobRestoreStatus>": {
      "type": "object",
      "description": "Azure operation completed successfully.",
      "properties": {
        "body": {
          "$ref": "#/definitions/BlobRestoreStatus",
          "description": "The body type of the operation request or response."
        }
      },
      "required": [
        "body"
      ]
    },
    "AzureFilesIdentityBasedAuthentication": {
      "type": "object",
      "description": "Settings for Azure Files identity based authentication.",
      "properties": {
        "directoryServiceOptions": {
          "$ref": "#/definitions/DirectoryServiceOptions",
          "description": "Indicates the directory service used. Note that this enum may be extended in the future."
        },
        "activeDirectoryProperties": {
          "$ref": "#/definitions/ActiveDirectoryProperties",
          "description": "Required if directoryServiceOptions are AD, optional if they are AADKERB."
        },
        "defaultSharePermission": {
          "$ref": "#/definitions/DefaultSharePermission",
          "description": "Default share permission for users using Kerberos authentication if RBAC role is not assigned."
        }
      },
      "required": [
        "directoryServiceOptions"
      ]
    },
    "BlobContainer": {
      "type": "object",
      "description": "Properties of the blob container, including Id, resource name, resource type, Etag.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContainerProperties",
          "description": "Properties of the blob container.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BlobInventoryPolicy": {
      "type": "object",
      "description": "The storage account blob inventory policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobInventoryPolicyProperties",
          "description": "Returns the storage account blob inventory policy rules.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BlobInventoryPolicyDefinition": {
      "type": "object",
      "description": "An object that defines the blob inventory rule.",
      "properties": {
        "filters": {
          "$ref": "#/definitions/BlobInventoryPolicyFilter",
          "description": "An object that defines the filter set."
        },
        "format": {
          "$ref": "#/definitions/Format",
          "description": "This is a required field, it specifies the format for the inventory files."
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "This is a required field. This field is used to schedule an inventory formation."
        },
        "objectType": {
          "$ref": "#/definitions/ObjectType",
          "description": "This is a required field. This field specifies the scope of the inventory created either at the blob or container level."
        },
        "schemaFields": {
          "type": "array",
          "description": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "format",
        "schedule",
        "objectType",
        "schemaFields"
      ]
    },
    "BlobInventoryPolicyFilter": {
      "type": "object",
      "description": "An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional.",
      "properties": {
        "prefixMatch": {
          "type": "array",
          "description": "An array of strings with maximum 10 blob prefixes to be included in the inventory.",
          "items": {
            "type": "string"
          }
        },
        "excludePrefix": {
          "type": "array",
          "description": "An array of strings with maximum 10 blob prefixes to be excluded from the inventory.",
          "items": {
            "type": "string"
          }
        },
        "blobTypes": {
          "type": "array",
          "description": "An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.",
          "items": {
            "type": "string"
          }
        },
        "includeBlobVersions": {
          "type": "boolean",
          "description": "Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded."
        },
        "includeSnapshots": {
          "type": "boolean",
          "description": "Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded."
        },
        "includeDeleted": {
          "type": "boolean",
          "description": "For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded."
        }
      }
    },
    "BlobInventoryPolicyProperties": {
      "type": "object",
      "description": "The storage account blob inventory policy properties.",
      "properties": {
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the last modified date and time of the blob inventory policy.",
          "readOnly": true
        },
        "policy": {
          "$ref": "#/definitions/BlobInventoryPolicySchema",
          "description": "The storage account blob inventory policy object. It is composed of policy rules."
        }
      },
      "required": [
        "policy"
      ]
    },
    "BlobInventoryPolicyRule": {
      "type": "object",
      "description": "An object that wraps the blob inventory rule. Each rule is uniquely defined by name.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Rule is enabled when set to true."
        },
        "name": {
          "type": "string",
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
        },
        "destination": {
          "type": "string",
          "description": "Container name where blob inventory files are stored. Must be pre-created."
        },
        "definition": {
          "$ref": "#/definitions/BlobInventoryPolicyDefinition",
          "description": "An object that defines the blob inventory policy rule."
        }
      },
      "required": [
        "enabled",
        "name",
        "destination",
        "definition"
      ]
    },
    "BlobInventoryPolicySchema": {
      "type": "object",
      "description": "The storage account blob inventory policy rules.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Policy is enabled if set to true."
        },
        "destination": {
          "type": "string",
          "description": "Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/InventoryRuleType",
          "description": "The valid value is Inventory"
        },
        "rules": {
          "type": "array",
          "description": "The storage account blob inventory policy rules. The rule is applied when it is enabled.",
          "items": {
            "$ref": "#/definitions/BlobInventoryPolicyRule"
          }
        }
      },
      "required": [
        "enabled",
        "type",
        "rules"
      ]
    },
    "BlobRestoreParameters": {
      "type": "object",
      "description": "Blob restore parameters",
      "properties": {
        "timetoRestore": {
          "type": "string",
          "format": "date-time",
          "description": "Restore blob to the specified time.",
          "x-ms-client-name": "timeToRestore"
        },
        "blobRanges": {
          "type": "array",
          "description": "Blob ranges to restore.",
          "items": {
            "$ref": "#/definitions/BlobRestoreRange"
          }
        }
      },
      "required": [
        "timetoRestore",
        "blobRanges"
      ]
    },
    "BlobRestoreProgressStatus": {
      "type": "string",
      "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
      "enum": [
        "InProgress",
        "Complete",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "BlobRestoreProgressStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Complete",
            "value": "Complete"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "BlobRestoreRange": {
      "type": "object",
      "description": "Blob range",
      "properties": {
        "startRange": {
          "type": "string",
          "description": "Blob start range. This is inclusive. Empty means account start."
        },
        "endRange": {
          "type": "string",
          "description": "Blob end range. This is exclusive. Empty means account end."
        }
      },
      "required": [
        "startRange",
        "endRange"
      ]
    },
    "BlobRestoreStatus": {
      "type": "object",
      "description": "Blob restore status.",
      "properties": {
        "status": {
          "$ref": "#/definitions/BlobRestoreProgressStatus",
          "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
          "readOnly": true
        },
        "failureReason": {
          "type": "string",
          "description": "Failure reason when blob restore is failed.",
          "readOnly": true
        },
        "restoreId": {
          "type": "string",
          "description": "Id for tracking blob restore request.",
          "readOnly": true
        },
        "parameters": {
          "$ref": "#/definitions/BlobRestoreParameters",
          "description": "Blob restore request parameters.",
          "readOnly": true
        }
      }
    },
    "BlobServiceItems": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of blob services returned.",
          "items": {
            "$ref": "#/definitions/BlobServiceProperties"
          },
          "readOnly": true
        }
      }
    },
    "BlobServiceProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Blob service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobServicePropertiesProperties",
          "description": "The properties of a storage account’s Blob service.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku name and tier.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BlobServicePropertiesProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Blob service.",
      "properties": {
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service."
        },
        "defaultServiceVersion": {
          "type": "string",
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions."
        },
        "deleteRetentionPolicy": {
          "$ref": "#/definitions/DeleteRetentionPolicy",
          "description": "The blob service properties for blob soft delete."
        },
        "isVersioningEnabled": {
          "type": "boolean",
          "description": "Versioning is enabled if set to true."
        },
        "automaticSnapshotPolicyEnabled": {
          "type": "boolean",
          "description": "Deprecated in favor of isVersioningEnabled property."
        },
        "changeFeed": {
          "$ref": "#/definitions/ChangeFeed",
          "description": "The blob service properties for change feed events."
        },
        "restorePolicy": {
          "$ref": "#/definitions/RestorePolicyProperties",
          "description": "The blob service properties for blob restore policy."
        },
        "containerDeleteRetentionPolicy": {
          "$ref": "#/definitions/DeleteRetentionPolicy",
          "description": "The blob service properties for container soft delete."
        },
        "lastAccessTimeTrackingPolicy": {
          "$ref": "#/definitions/LastAccessTimeTrackingPolicy",
          "description": "The blob service property to configure last access time based tracking policy."
        }
      }
    },
    "ChangeFeed": {
      "type": "object",
      "description": "The blob service properties for change feed events.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether change feed event logging is enabled for the Blob service."
        },
        "retentionInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.",
          "minimum": 1,
          "maximum": 146000
        }
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "The CheckNameAvailability operation response.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.",
          "readOnly": true
        },
        "reason": {
          "$ref": "#/definitions/Reason",
          "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets an error message explaining the Reason value in more detail.",
          "readOnly": true
        }
      }
    },
    "ContainerProperties": {
      "type": "object",
      "description": "The properties of a container.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of the deleted blob container.",
          "readOnly": true
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates whether the blob container was deleted.",
          "readOnly": true
        },
        "deletedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Blob container deletion time.",
          "readOnly": true
        },
        "remainingRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Remaining retention days for soft deleted blob container.",
          "readOnly": true
        },
        "defaultEncryptionScope": {
          "type": "string",
          "description": "Default the container to use specified encryption scope for all writes."
        },
        "denyEncryptionScopeOverride": {
          "type": "boolean",
          "description": "Block override of encryption scope from the container default."
        },
        "publicAccess": {
          "$ref": "#/definitions/PublicAccess",
          "description": "Specifies whether data in the container may be accessed publicly and the level of access."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the container was last modified.",
          "readOnly": true
        },
        "leaseStatus": {
          "$ref": "#/definitions/LeaseStatus",
          "description": "The lease status of the container.",
          "readOnly": true
        },
        "leaseState": {
          "$ref": "#/definitions/LeaseState",
          "description": "Lease state of the container.",
          "readOnly": true
        },
        "leaseDuration": {
          "$ref": "#/definitions/LeaseDuration",
          "description": "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "A name-value pair to associate with the container as metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "immutabilityPolicy": {
          "$ref": "#/definitions/ImmutabilityPolicyProperties",
          "description": "The ImmutabilityPolicy property of the container.",
          "readOnly": true
        },
        "legalHold": {
          "$ref": "#/definitions/LegalHoldProperties",
          "description": "The LegalHold property of the container.",
          "readOnly": true
        },
        "hasLegalHold": {
          "type": "boolean",
          "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
          "readOnly": true
        },
        "hasImmutabilityPolicy": {
          "type": "boolean",
          "description": "The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.",
          "readOnly": true
        },
        "immutableStorageWithVersioning": {
          "$ref": "#/definitions/ImmutableStorageWithVersioning",
          "description": "The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process."
        },
        "enableNfsV3RootSquash": {
          "type": "boolean",
          "description": "Enable NFSv3 root squash on blob container."
        },
        "enableNfsV3AllSquash": {
          "type": "boolean",
          "description": "Enable NFSv3 all squash on blob container."
        }
      }
    },
    "CorsRule": {
      "type": "object",
      "description": "Specifies a CORS rule for the Blob service.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.",
          "items": {
            "$ref": "#/definitions/AllowedMethods"
          }
        },
        "maxAgeInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."
        },
        "exposedHeaders": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "allowedOrigins",
        "allowedMethods",
        "maxAgeInSeconds",
        "exposedHeaders",
        "allowedHeaders"
      ]
    },
    "CorsRules": {
      "type": "object",
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request.",
      "properties": {
        "corsRules": {
          "type": "array",
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request.",
          "items": {
            "$ref": "#/definitions/CorsRule"
          }
        }
      }
    },
    "CustomDomain": {
      "type": "object",
      "description": "The custom domain assigned to this storage account. This can be set via Update.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
        },
        "useSubDomainName": {
          "type": "boolean",
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
        }
      },
      "required": [
        "name"
      ]
    },
    "DateAfterCreation": {
      "type": "object",
      "description": "Object to define snapshot and version action conditions.",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after creation"
        },
        "daysAfterLastTierChangeGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied."
        }
      },
      "required": [
        "daysAfterCreationGreaterThan"
      ]
    },
    "DateAfterModification": {
      "type": "object",
      "description": "Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.",
      "properties": {
        "daysAfterModificationGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after last modification"
        },
        "daysAfterLastAccessTimeGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy"
        },
        "daysAfterLastTierChangeGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied."
        },
        "daysAfterCreationGreaterThan": {
          "type": "number",
          "format": "float",
          "description": "Value indicating the age in days after blob creation."
        }
      }
    },
    "DefaultSharePermission": {
      "type": "string",
      "description": "Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
      "enum": [
        "None",
        "StorageFileDataSmbShareReader",
        "StorageFileDataSmbShareContributor",
        "StorageFileDataSmbShareElevatedContributor"
      ],
      "x-ms-enum": {
        "name": "DefaultSharePermission",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "StorageFileDataSmbShareReader",
            "value": "StorageFileDataSmbShareReader"
          },
          {
            "name": "StorageFileDataSmbShareContributor",
            "value": "StorageFileDataSmbShareContributor"
          },
          {
            "name": "StorageFileDataSmbShareElevatedContributor",
            "value": "StorageFileDataSmbShareElevatedContributor"
          }
        ]
      }
    },
    "DeleteRetentionPolicy": {
      "type": "object",
      "description": "The service properties for soft delete.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether DeleteRetentionPolicy is enabled."
        },
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
          "minimum": 1,
          "maximum": 365
        },
        "allowPermanentDelete": {
          "type": "boolean",
          "description": "This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share."
        }
      }
    },
    "DeletedAccount": {
      "type": "object",
      "description": "Deleted storage account",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedAccountProperties",
          "description": "Properties of the deleted account.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeletedAccountListResult": {
      "type": "object",
      "description": "The response of a DeletedAccount list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeletedAccount items on this page",
          "items": {
            "$ref": "#/definitions/DeletedAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeletedAccountProperties": {
      "type": "object",
      "description": "Attributes of a deleted storage account.",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "Full resource id of the original storage account.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location of the deleted account.",
          "readOnly": true
        },
        "restoreReference": {
          "type": "string",
          "description": "Can be used to attempt recovering this deleted account via PutStorageAccount API.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of the deleted account.",
          "readOnly": true
        },
        "deletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Deletion time of the deleted account.",
          "readOnly": true
        }
      }
    },
    "DeletedShare": {
      "type": "object",
      "description": "The deleted share to be restored.",
      "properties": {
        "deletedShareName": {
          "type": "string",
          "description": "Required. Identify the name of the deleted share that will be restored."
        },
        "deletedShareVersion": {
          "type": "string",
          "description": "Required. Identify the version of the deleted share that will be restored."
        }
      },
      "required": [
        "deletedShareName",
        "deletedShareVersion"
      ]
    },
    "DirectoryServiceOptions": {
      "type": "string",
      "description": "Indicates the directory service used. Note that this enum may be extended in the future.",
      "enum": [
        "None",
        "AADDS",
        "AD",
        "AADKERB"
      ],
      "x-ms-enum": {
        "name": "DirectoryServiceOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "AADDS",
            "value": "AADDS"
          },
          {
            "name": "AD",
            "value": "AD"
          },
          {
            "name": "AADKERB",
            "value": "AADKERB"
          }
        ]
      }
    },
    "DnsEndpointType": {
      "type": "string",
      "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.",
      "enum": [
        "Standard",
        "AzureDnsZone"
      ],
      "x-ms-enum": {
        "name": "DnsEndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "AzureDnsZone",
            "value": "AzureDnsZone"
          }
        ]
      }
    },
    "EnabledProtocols": {
      "type": "string",
      "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share.",
      "enum": [
        "SMB",
        "NFS"
      ],
      "x-ms-enum": {
        "name": "EnabledProtocols",
        "modelAsString": true,
        "values": [
          {
            "name": "SMB",
            "value": "SMB"
          },
          {
            "name": "NFS",
            "value": "NFS"
          }
        ]
      }
    },
    "Encryption": {
      "type": "object",
      "description": "The encryption settings on the storage account.",
      "properties": {
        "services": {
          "$ref": "#/definitions/EncryptionServices",
          "description": "List of services which support encryption."
        },
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
          "default": "Microsoft.Storage",
          "enum": [
            "Microsoft.Storage",
            "Microsoft.Keyvault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true,
            "values": [
              {
                "name": "Microsoft.Storage",
                "value": "Microsoft.Storage"
              },
              {
                "name": "Microsoft.Keyvault",
                "value": "Microsoft.Keyvault"
              }
            ]
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
        },
        "keyvaultproperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties provided by key vault.",
          "x-ms-client-name": "keyVaultProperties"
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The identity to be used with service-side encryption at rest.",
          "x-ms-client-name": "encryptionIdentity"
        }
      }
    },
    "EncryptionIdentity": {
      "type": "object",
      "description": "Encryption identity for the storage account.",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.",
          "x-ms-client-name": "encryptionUserAssignedIdentity"
        },
        "federatedIdentityClientId": {
          "type": "string",
          "description": "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
          "x-ms-client-name": "encryptionFederatedIdentityClientId"
        }
      }
    },
    "EncryptionScope": {
      "type": "object",
      "description": "The Encryption Scope resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EncryptionScopeProperties",
          "description": "Properties of the encryption scope.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EncryptionScopeKeyVaultProperties": {
      "type": "object",
      "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.",
      "properties": {
        "keyUri": {
          "type": "string",
          "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."
        },
        "currentVersionedKeyIdentifier": {
          "type": "string",
          "description": "The object identifier of the current versioned Key Vault Key in use.",
          "readOnly": true
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last rotation of the Key Vault Key.",
          "readOnly": true
        }
      }
    },
    "EncryptionScopeListResult": {
      "type": "object",
      "description": "The response of a EncryptionScope list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EncryptionScope items on this page",
          "items": {
            "$ref": "#/definitions/EncryptionScope"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EncryptionScopeProperties": {
      "type": "object",
      "description": "Properties of the encryption scope.",
      "properties": {
        "source": {
          "$ref": "#/definitions/EncryptionScopeSource",
          "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."
        },
        "state": {
          "$ref": "#/definitions/EncryptionScopeState",
          "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the creation date and time of the encryption scope in UTC.",
          "readOnly": true
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the last modification date and time of the encryption scope in UTC.",
          "readOnly": true
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionScopeKeyVaultProperties",
          "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
        }
      }
    },
    "EncryptionScopeSource": {
      "type": "string",
      "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.",
      "enum": [
        "Microsoft.Storage",
        "Microsoft.KeyVault"
      ],
      "x-ms-enum": {
        "name": "EncryptionScopeSource",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft.Storage",
            "value": "Microsoft.Storage"
          },
          {
            "name": "Microsoft.KeyVault",
            "value": "Microsoft.KeyVault"
          }
        ]
      }
    },
    "EncryptionScopeState": {
      "type": "string",
      "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionScopeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "EncryptionService": {
      "type": "object",
      "description": "A service that allows server-side encryption to be used.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled."
        },
        "lastEnabledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.",
          "readOnly": true
        },
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "EncryptionServices": {
      "type": "object",
      "description": "A list of services that support encryption.",
      "properties": {
        "blob": {
          "$ref": "#/definitions/EncryptionService",
          "description": "The encryption function of the blob storage service."
        },
        "file": {
          "$ref": "#/definitions/EncryptionService",
          "description": "The encryption function of the file storage service."
        },
        "table": {
          "$ref": "#/definitions/EncryptionService",
          "description": "The encryption function of the table storage service."
        },
        "queue": {
          "$ref": "#/definitions/EncryptionService",
          "description": "The encryption function of the queue storage service."
        }
      }
    },
    "Endpoints": {
      "type": "object",
      "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
      "properties": {
        "blob": {
          "type": "string",
          "description": "Gets the blob endpoint.",
          "readOnly": true
        },
        "queue": {
          "type": "string",
          "description": "Gets the queue endpoint.",
          "readOnly": true
        },
        "table": {
          "type": "string",
          "description": "Gets the table endpoint.",
          "readOnly": true
        },
        "file": {
          "type": "string",
          "description": "Gets the file endpoint.",
          "readOnly": true
        },
        "web": {
          "type": "string",
          "description": "Gets the web endpoint.",
          "readOnly": true
        },
        "dfs": {
          "type": "string",
          "description": "Gets the dfs endpoint.",
          "readOnly": true
        },
        "microsoftEndpoints": {
          "$ref": "#/definitions/StorageAccountMicrosoftEndpoints",
          "description": "Gets the microsoft routing storage endpoints."
        },
        "internetEndpoints": {
          "$ref": "#/definitions/StorageAccountInternetEndpoints",
          "description": "Gets the internet routing storage endpoints"
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationTypes",
          "description": "The type of the extended location."
        }
      }
    },
    "ExtendedLocationTypes": {
      "type": "string",
      "description": "The type of extendedLocation.",
      "enum": [
        "EdgeZone"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "EdgeZone",
            "value": "EdgeZone"
          }
        ]
      }
    },
    "FileServiceItems": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of file services returned.",
          "items": {
            "$ref": "#/definitions/FileServiceProperties"
          },
          "readOnly": true
        }
      }
    },
    "FileServiceProperties": {
      "type": "object",
      "description": "The properties of File services in storage account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileServicePropertiesProperties",
          "description": "The properties of File services in storage account.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku name and tier.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FileServicePropertiesProperties": {
      "type": "object",
      "description": "The properties of File services in storage account.",
      "properties": {
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service."
        },
        "shareDeleteRetentionPolicy": {
          "$ref": "#/definitions/DeleteRetentionPolicy",
          "description": "The file service properties for share soft delete."
        },
        "protocolSettings": {
          "$ref": "#/definitions/ProtocolSettings",
          "description": "Protocol settings for file service"
        }
      }
    },
    "FileShare": {
      "type": "object",
      "description": "Properties of the file share, including Id, resource name, resource type, Etag.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileShareProperties",
          "description": "Properties of the file share.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FileShareItems": {
      "type": "object",
      "description": "Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FileShare items on this page",
          "items": {
            "$ref": "#/definitions/FileShare"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FileShareProperties": {
      "type": "object",
      "description": "The properties of the file share.",
      "properties": {
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the share was last modified.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "A name-value pair to associate with the share as metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "shareQuota": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
          "minimum": 1,
          "maximum": 102400
        },
        "enabledProtocols": {
          "$ref": "#/definitions/EnabledProtocols",
          "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "rootSquash": {
          "$ref": "#/definitions/RootSquashType",
          "description": "The property is for NFS share only. The default is NoRootSquash."
        },
        "version": {
          "type": "string",
          "description": "The version of the share.",
          "readOnly": true
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates whether the share was deleted.",
          "readOnly": true
        },
        "deletedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The deleted time if the share was deleted.",
          "readOnly": true
        },
        "remainingRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Remaining retention days for share that was soft deleted.",
          "readOnly": true
        },
        "accessTier": {
          "$ref": "#/definitions/ShareAccessTier",
          "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium."
        },
        "accessTierChangeTime": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the last modification time for share access tier.",
          "readOnly": true
        },
        "accessTierStatus": {
          "type": "string",
          "description": "Indicates if there is a pending transition for access tier.",
          "readOnly": true
        },
        "shareUsageBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.",
          "readOnly": true
        },
        "leaseStatus": {
          "$ref": "#/definitions/LeaseStatus",
          "description": "The lease status of the share.",
          "readOnly": true
        },
        "leaseState": {
          "$ref": "#/definitions/LeaseState",
          "description": "Lease state of the share.",
          "readOnly": true
        },
        "leaseDuration": {
          "$ref": "#/definitions/LeaseDuration",
          "description": "Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.",
          "readOnly": true
        },
        "signedIdentifiers": {
          "type": "array",
          "description": "List of stored access policies specified on the share.",
          "items": {
            "$ref": "#/definitions/SignedIdentifier"
          }
        },
        "snapshotTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".",
          "readOnly": true
        }
      }
    },
    "Format": {
      "type": "string",
      "description": "This is a required field, it specifies the format for the inventory files.",
      "enum": [
        "Csv",
        "Parquet"
      ],
      "x-ms-enum": {
        "name": "Format",
        "modelAsString": true,
        "values": [
          {
            "name": "Csv",
            "value": "Csv"
          },
          {
            "name": "Parquet",
            "value": "Parquet"
          }
        ]
      }
    },
    "GeoReplicationStats": {
      "type": "object",
      "description": "Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.",
      "properties": {
        "status": {
          "$ref": "#/definitions/GeoReplicationStatus",
          "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
          "readOnly": true
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time",
          "description": "All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
          "readOnly": true
        },
        "canFailover": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether or not account failover is supported for the account.",
          "readOnly": true
        }
      }
    },
    "GeoReplicationStatus": {
      "type": "string",
      "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
      "enum": [
        "Live",
        "Bootstrap",
        "Unavailable"
      ],
      "x-ms-enum": {
        "name": "GeoReplicationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Live",
            "value": "Live"
          },
          {
            "name": "Bootstrap",
            "value": "Bootstrap"
          },
          {
            "name": "Unavailable",
            "value": "Unavailable"
          }
        ]
      }
    },
    "HttpProtocol": {
      "type": "string",
      "description": "The protocol permitted for a request made with the account SAS.",
      "enum": [
        "https,http",
        "https"
      ],
      "x-ms-enum": {
        "name": "HttpProtocol",
        "modelAsString": false
      }
    },
    "IPRule": {
      "type": "object",
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "x-ms-client-name": "IPAddressOrRange"
        },
        "action": {
          "type": "string",
          "description": "The action of IP ACL rule.",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/IdentityType",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "IdentityType": {
      "type": "string",
      "description": "The identity type.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned,UserAssigned",
            "value": "SystemAssigned,UserAssigned"
          }
        ]
      }
    },
    "ImmutabilityPolicy": {
      "type": "object",
      "description": "The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImmutabilityPolicyProperty",
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImmutabilityPolicyProperties": {
      "type": "object",
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImmutabilityPolicyProperty",
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "ImmutabilityPolicy Etag.",
          "readOnly": true
        },
        "updateHistory": {
          "type": "array",
          "description": "The ImmutabilityPolicy update history of the blob container.",
          "items": {
            "$ref": "#/definitions/UpdateHistoryProperty"
          },
          "readOnly": true
        }
      }
    },
    "ImmutabilityPolicyProperty": {
      "type": "object",
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The immutability period for the blobs in the container since the policy creation, in days."
        },
        "state": {
          "$ref": "#/definitions/ImmutabilityPolicyState",
          "description": "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.",
          "readOnly": true
        },
        "allowProtectedAppendWrites": {
          "type": "boolean",
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API."
        },
        "allowProtectedAppendWritesAll": {
          "type": "boolean",
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive."
        }
      }
    },
    "ImmutabilityPolicyState": {
      "type": "string",
      "description": "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.",
      "enum": [
        "Locked",
        "Unlocked"
      ],
      "x-ms-enum": {
        "name": "ImmutabilityPolicyState",
        "modelAsString": true,
        "values": [
          {
            "name": "Locked",
            "value": "Locked"
          },
          {
            "name": "Unlocked",
            "value": "Unlocked"
          }
        ]
      }
    },
    "ImmutabilityPolicyUpdateType": {
      "type": "string",
      "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.",
      "enum": [
        "put",
        "lock",
        "extend"
      ],
      "x-ms-enum": {
        "name": "ImmutabilityPolicyUpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "put",
            "value": "put"
          },
          {
            "name": "lock",
            "value": "lock"
          },
          {
            "name": "extend",
            "value": "extend"
          }
        ]
      }
    },
    "ImmutableStorageAccount": {
      "type": "object",
      "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default."
        },
        "immutabilityPolicy": {
          "$ref": "#/definitions/AccountImmutabilityPolicyProperties",
          "description": "Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy."
        }
      }
    },
    "ImmutableStorageWithVersioning": {
      "type": "object",
      "description": "Object level immutability properties of the container.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "This is an immutable property, when set to true it enables object level immutability at the container level."
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the object level immutability was enabled.",
          "readOnly": true
        },
        "migrationState": {
          "$ref": "#/definitions/MigrationState",
          "description": "This property denotes the container level immutability to object level immutability migration state.",
          "readOnly": true
        }
      }
    },
    "InventoryRuleType": {
      "type": "string",
      "description": "The valid value is Inventory",
      "enum": [
        "Inventory"
      ],
      "x-ms-enum": {
        "name": "InventoryRuleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Inventory",
            "value": "Inventory"
          }
        ]
      }
    },
    "KeyCreationTime": {
      "type": "object",
      "description": "Storage account keys creation time.",
      "properties": {
        "key1": {
          "type": "string",
          "format": "date-time"
        },
        "key2": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "KeyPermission": {
      "type": "string",
      "description": "Permissions for the key -- read-only or full permissions.",
      "enum": [
        "Read",
        "Full"
      ],
      "x-ms-enum": {
        "name": "KeyPermission",
        "modelAsString": false
      }
    },
    "KeyPolicy": {
      "type": "object",
      "description": "KeyPolicy assigned to the storage account.",
      "properties": {
        "keyExpirationPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The key expiration period in days."
        }
      },
      "required": [
        "keyExpirationPeriodInDays"
      ]
    },
    "KeyType": {
      "type": "string",
      "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
      "enum": [
        "Service",
        "Account"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Service",
            "value": "Service"
          },
          {
            "name": "Account",
            "value": "Account"
          }
        ]
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Properties of key vault.",
      "properties": {
        "keyname": {
          "type": "string",
          "description": "The name of KeyVault key.",
          "x-ms-client-name": "keyName"
        },
        "keyversion": {
          "type": "string",
          "description": "The version of KeyVault key.",
          "x-ms-client-name": "keyVersion"
        },
        "keyvaulturi": {
          "type": "string",
          "description": "The Uri of KeyVault.",
          "x-ms-client-name": "keyVaultUri"
        },
        "currentVersionedKeyIdentifier": {
          "type": "string",
          "description": "The object identifier of the current versioned Key Vault Key in use.",
          "readOnly": true
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last rotation of the Key Vault Key.",
          "readOnly": true
        },
        "currentVersionedKeyExpirationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
          "readOnly": true
        }
      }
    },
    "Kind": {
      "type": "string",
      "description": "Indicates the type of storage account.",
      "enum": [
        "Storage",
        "StorageV2",
        "BlobStorage",
        "FileStorage",
        "BlockBlobStorage"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true,
        "values": [
          {
            "name": "Storage",
            "value": "Storage"
          },
          {
            "name": "StorageV2",
            "value": "StorageV2"
          },
          {
            "name": "BlobStorage",
            "value": "BlobStorage"
          },
          {
            "name": "FileStorage",
            "value": "FileStorage"
          },
          {
            "name": "BlockBlobStorage",
            "value": "BlockBlobStorage"
          }
        ]
      }
    },
    "LargeFileSharesState": {
      "type": "string",
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "LargeFileSharesState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "LastAccessTimeTrackingPolicy": {
      "type": "object",
      "description": "The blob service properties for Last access time based tracking policy.",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "When set to true last access time based tracking is enabled."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "Name of the policy. The valid value is AccessTimeTracking. This field is currently read only"
        },
        "trackingGranularityInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1"
        },
        "blobType": {
          "type": "array",
          "description": "An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "enable"
      ]
    },
    "LeaseContainerRequest": {
      "type": "object",
      "description": "Lease Container request schema.",
      "properties": {
        "action": {
          "$ref": "#/definitions/LeaseContainerRequestAction",
          "description": "Specifies the lease action. Can be one of the available actions."
        },
        "leaseId": {
          "type": "string",
          "description": "Identifies the lease. Can be specified in any valid GUID string format."
        },
        "breakPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60."
        },
        "leaseDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires."
        },
        "proposedLeaseId": {
          "type": "string",
          "description": "Optional for acquire, required for change. Proposed lease ID, in a GUID string format."
        }
      },
      "required": [
        "action"
      ]
    },
    "LeaseContainerRequestAction": {
      "type": "string",
      "description": "Specifies the lease action. Can be one of the available actions.",
      "enum": [
        "Acquire",
        "Renew",
        "Change",
        "Release",
        "Break"
      ],
      "x-ms-enum": {
        "name": "LeaseContainerRequestAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Acquire",
            "value": "Acquire"
          },
          {
            "name": "Renew",
            "value": "Renew"
          },
          {
            "name": "Change",
            "value": "Change"
          },
          {
            "name": "Release",
            "value": "Release"
          },
          {
            "name": "Break",
            "value": "Break"
          }
        ]
      }
    },
    "LeaseContainerResponse": {
      "type": "object",
      "description": "Lease Container response schema.",
      "properties": {
        "leaseId": {
          "type": "string",
          "description": "Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease."
        },
        "leaseTimeSeconds": {
          "type": "string",
          "description": "Approximate time remaining in the lease period, in seconds."
        }
      }
    },
    "LeaseDuration": {
      "type": "string",
      "description": "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.",
      "enum": [
        "Infinite",
        "Fixed"
      ],
      "x-ms-enum": {
        "name": "LeaseDuration",
        "modelAsString": true,
        "values": [
          {
            "name": "Infinite",
            "value": "Infinite"
          },
          {
            "name": "Fixed",
            "value": "Fixed"
          }
        ]
      }
    },
    "LeaseShareAction": {
      "type": "string",
      "description": "Specifies the lease action. Can be one of the available actions.",
      "enum": [
        "Acquire",
        "Renew",
        "Change",
        "Release",
        "Break"
      ],
      "x-ms-enum": {
        "name": "LeaseShareAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Acquire",
            "value": "Acquire"
          },
          {
            "name": "Renew",
            "value": "Renew"
          },
          {
            "name": "Change",
            "value": "Change"
          },
          {
            "name": "Release",
            "value": "Release"
          },
          {
            "name": "Break",
            "value": "Break"
          }
        ]
      }
    },
    "LeaseShareRequest": {
      "type": "object",
      "description": "Lease Share request schema.",
      "properties": {
        "action": {
          "$ref": "#/definitions/LeaseShareAction",
          "description": "Specifies the lease action. Can be one of the available actions."
        },
        "leaseId": {
          "type": "string",
          "description": "Identifies the lease. Can be specified in any valid GUID string format."
        },
        "breakPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60."
        },
        "leaseDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires."
        },
        "proposedLeaseId": {
          "type": "string",
          "description": "Optional for acquire, required for change. Proposed lease ID, in a GUID string format."
        }
      },
      "required": [
        "action"
      ]
    },
    "LeaseShareResponse": {
      "type": "object",
      "description": "Lease Share response schema.",
      "properties": {
        "leaseId": {
          "type": "string",
          "description": "Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease."
        },
        "leaseTimeSeconds": {
          "type": "string",
          "description": "Approximate time remaining in the lease period, in seconds."
        }
      }
    },
    "LeaseState": {
      "type": "string",
      "description": "Lease state of the container.",
      "enum": [
        "Available",
        "Leased",
        "Expired",
        "Breaking",
        "Broken"
      ],
      "x-ms-enum": {
        "name": "LeaseState",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available"
          },
          {
            "name": "Leased",
            "value": "Leased"
          },
          {
            "name": "Expired",
            "value": "Expired"
          },
          {
            "name": "Breaking",
            "value": "Breaking"
          },
          {
            "name": "Broken",
            "value": "Broken"
          }
        ]
      }
    },
    "LeaseStatus": {
      "type": "string",
      "description": "The lease status of the container.",
      "enum": [
        "Locked",
        "Unlocked"
      ],
      "x-ms-enum": {
        "name": "LeaseStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Locked",
            "value": "Locked"
          },
          {
            "name": "Unlocked",
            "value": "Unlocked"
          }
        ]
      }
    },
    "LegalHold": {
      "type": "object",
      "description": "The LegalHold property of a blob container.",
      "properties": {
        "hasLegalHold": {
          "type": "boolean",
          "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
          "readOnly": true
        },
        "tags": {
          "type": "array",
          "description": "Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.",
          "items": {
            "type": "string"
          }
        },
        "allowProtectedAppendWritesAll": {
          "type": "boolean",
          "description": "When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted."
        }
      },
      "required": [
        "tags"
      ]
    },
    "LegalHoldProperties": {
      "type": "object",
      "description": "The LegalHold property of a blob container.",
      "properties": {
        "hasLegalHold": {
          "type": "boolean",
          "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
          "readOnly": true
        },
        "tags": {
          "type": "array",
          "description": "The list of LegalHold tags of a blob container.",
          "items": {
            "$ref": "#/definitions/TagProperty"
          }
        },
        "protectedAppendWritesHistory": {
          "$ref": "#/definitions/ProtectedAppendWritesHistory",
          "description": "Protected append blob writes history."
        }
      }
    },
    "ListAccountSasResponse": {
      "type": "object",
      "description": "The List SAS credentials operation response.",
      "properties": {
        "accountSasToken": {
          "type": "string",
          "description": "List SAS credentials of storage account.",
          "readOnly": true
        }
      }
    },
    "ListBlobInventoryPolicy": {
      "type": "object",
      "description": "List of blob inventory policies returned.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of blob inventory policies.",
          "items": {
            "$ref": "#/definitions/BlobInventoryPolicy"
          },
          "readOnly": true
        }
      }
    },
    "ListContainerItems": {
      "type": "object",
      "description": "Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BlobContainer items on this page",
          "items": {
            "$ref": "#/definitions/BlobContainer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListQueueResource": {
      "type": "object",
      "description": "Response schema. Contains list of queues returned",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageQueue items on this page",
          "items": {
            "$ref": "#/definitions/StorageQueue"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListQueueServices": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of queue services returned.",
          "items": {
            "$ref": "#/definitions/QueueServiceProperties"
          },
          "readOnly": true
        }
      }
    },
    "ListServiceSasResponse": {
      "type": "object",
      "description": "The List service SAS credentials operation response.",
      "properties": {
        "serviceSasToken": {
          "type": "string",
          "description": "List service SAS credentials of specific resource.",
          "readOnly": true
        }
      }
    },
    "ListTableResource": {
      "type": "object",
      "description": "Response schema. Contains list of tables returned",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Table items on this page",
          "items": {
            "$ref": "#/definitions/Table"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListTableServices": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of table services returned.",
          "items": {
            "$ref": "#/definitions/TableServiceProperties"
          },
          "readOnly": true
        }
      }
    },
    "LocalUser": {
      "type": "object",
      "description": "The local user associated with the storage accounts.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LocalUserProperties",
          "description": "Storage account local user properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LocalUserKeys": {
      "type": "object",
      "description": "The Storage Account Local User keys.",
      "properties": {
        "sshAuthorizedKeys": {
          "type": "array",
          "description": "Optional, local user ssh authorized keys for SFTP.",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          }
        },
        "sharedKey": {
          "type": "string",
          "description": "Auto generated by the server for SMB authentication.",
          "readOnly": true
        }
      }
    },
    "LocalUserProperties": {
      "type": "object",
      "description": "The Storage Account Local User properties.",
      "properties": {
        "permissionScopes": {
          "type": "array",
          "description": "The permission scopes of the local user.",
          "items": {
            "$ref": "#/definitions/PermissionScope"
          }
        },
        "homeDirectory": {
          "type": "string",
          "description": "Optional, local user home directory."
        },
        "sshAuthorizedKeys": {
          "type": "array",
          "description": "Optional, local user ssh authorized keys for SFTP.",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          }
        },
        "sid": {
          "type": "string",
          "description": "A unique Security Identifier that is generated by the server.",
          "readOnly": true
        },
        "hasSharedKey": {
          "type": "boolean",
          "description": "Indicates whether shared key exists. Set it to false to remove existing shared key."
        },
        "hasSshKey": {
          "type": "boolean",
          "description": "Indicates whether ssh key exists. Set it to false to remove existing SSH key."
        },
        "hasSshPassword": {
          "type": "boolean",
          "description": "Indicates whether ssh password exists. Set it to false to remove existing SSH password."
        }
      }
    },
    "LocalUserRegeneratePasswordResult": {
      "type": "object",
      "description": "The secrets of Storage Account Local User.",
      "properties": {
        "sshPassword": {
          "type": "string",
          "description": "Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.",
          "readOnly": true
        }
      }
    },
    "LocalUsers": {
      "type": "object",
      "description": "List storage account local users.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The local users associated with the storage account.",
          "items": {
            "$ref": "#/definitions/LocalUser"
          }
        }
      }
    },
    "ManagementPolicy": {
      "type": "object",
      "description": "The Get Storage Account ManagementPolicies operation response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagementPolicyProperties",
          "description": "Returns the Storage Account Data Policies Rules.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ManagementPolicyAction": {
      "type": "object",
      "description": "Actions are applied to the filtered blobs when the execution condition is met.",
      "properties": {
        "baseBlob": {
          "$ref": "#/definitions/ManagementPolicyBaseBlob",
          "description": "The management policy action for base blob"
        },
        "snapshot": {
          "$ref": "#/definitions/ManagementPolicySnapShot",
          "description": "The management policy action for snapshot"
        },
        "version": {
          "$ref": "#/definitions/ManagementPolicyVersion",
          "description": "The management policy action for version"
        }
      }
    },
    "ManagementPolicyBaseBlob": {
      "type": "object",
      "description": "Management policy action for base blob.",
      "properties": {
        "tierToCool": {
          "$ref": "#/definitions/DateAfterModification",
          "description": "The function to tier blobs to cool storage."
        },
        "tierToArchive": {
          "$ref": "#/definitions/DateAfterModification",
          "description": "The function to tier blobs to archive storage."
        },
        "tierToCold": {
          "$ref": "#/definitions/DateAfterModification",
          "description": "The function to tier blobs to cold storage."
        },
        "tierToHot": {
          "$ref": "#/definitions/DateAfterModification",
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
        },
        "delete": {
          "$ref": "#/definitions/DateAfterModification",
          "description": "The function to delete the blob"
        },
        "enableAutoTierToHotFromCool": {
          "type": "boolean",
          "description": "This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan."
        }
      }
    },
    "ManagementPolicyDefinition": {
      "type": "object",
      "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ManagementPolicyAction",
          "description": "An object that defines the action set."
        },
        "filters": {
          "$ref": "#/definitions/ManagementPolicyFilter",
          "description": "An object that defines the filter set."
        }
      },
      "required": [
        "actions"
      ]
    },
    "ManagementPolicyFilter": {
      "type": "object",
      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.",
      "properties": {
        "prefixMatch": {
          "type": "array",
          "description": "An array of strings for prefixes to be match.",
          "items": {
            "type": "string"
          }
        },
        "blobTypes": {
          "type": "array",
          "description": "An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.",
          "items": {
            "type": "string"
          }
        },
        "blobIndexMatch": {
          "type": "array",
          "description": "An array of blob index tag based filters, there can be at most 10 tag filters",
          "items": {
            "$ref": "#/definitions/TagFilter"
          }
        }
      },
      "required": [
        "blobTypes"
      ]
    },
    "ManagementPolicyProperties": {
      "type": "object",
      "description": "The Storage Account ManagementPolicy properties.",
      "properties": {
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the ManagementPolicies was last modified.",
          "readOnly": true
        },
        "policy": {
          "$ref": "#/definitions/ManagementPolicySchema",
          "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
        }
      },
      "required": [
        "policy"
      ]
    },
    "ManagementPolicyRule": {
      "type": "object",
      "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Rule is enabled if set to true."
        },
        "name": {
          "type": "string",
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
        },
        "type": {
          "$ref": "#/definitions/RuleType",
          "description": "The valid value is Lifecycle"
        },
        "definition": {
          "$ref": "#/definitions/ManagementPolicyDefinition",
          "description": "An object that defines the Lifecycle rule."
        }
      },
      "required": [
        "name",
        "type",
        "definition"
      ]
    },
    "ManagementPolicySchema": {
      "type": "object",
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
      "properties": {
        "rules": {
          "type": "array",
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
          "items": {
            "$ref": "#/definitions/ManagementPolicyRule"
          }
        }
      },
      "required": [
        "rules"
      ]
    },
    "ManagementPolicySnapShot": {
      "type": "object",
      "description": "Management policy action for snapshot.",
      "properties": {
        "tierToCool": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blob snapshot to cool storage."
        },
        "tierToArchive": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blob snapshot to archive storage."
        },
        "tierToCold": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blobs to cold storage."
        },
        "tierToHot": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
        },
        "delete": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to delete the blob snapshot"
        }
      }
    },
    "ManagementPolicyVersion": {
      "type": "object",
      "description": "Management policy action for blob version.",
      "properties": {
        "tierToCool": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blob version to cool storage."
        },
        "tierToArchive": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blob version to archive storage."
        },
        "tierToCold": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blobs to cold storage."
        },
        "tierToHot": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
        },
        "delete": {
          "$ref": "#/definitions/DateAfterCreation",
          "description": "The function to delete the blob version"
        }
      }
    },
    "MigrationState": {
      "type": "string",
      "description": "This property denotes the container level immutability to object level immutability migration state.",
      "enum": [
        "InProgress",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "MigrationState",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          }
        ]
      }
    },
    "MinimumTlsVersion": {
      "type": "string",
      "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
      "enum": [
        "TLS1_0",
        "TLS1_1",
        "TLS1_2"
      ],
      "x-ms-enum": {
        "name": "MinimumTlsVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "TLS1_0",
            "value": "TLS1_0"
          },
          {
            "name": "TLS1_1",
            "value": "TLS1_1"
          },
          {
            "name": "TLS1_2",
            "value": "TLS1_2"
          }
        ]
      }
    },
    "Multichannel": {
      "type": "object",
      "description": "Multichannel setting. Applies to Premium FileStorage only.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether multichannel is enabled"
        }
      }
    },
    "Name": {
      "type": "string",
      "description": "Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
      "enum": [
        "AccessTimeTracking"
      ],
      "x-ms-enum": {
        "name": "Name",
        "modelAsString": true,
        "values": [
          {
            "name": "AccessTimeTracking",
            "value": "AccessTimeTracking"
          }
        ]
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "description": "Network rule set",
      "properties": {
        "bypass": {
          "type": "string",
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
          "default": "AzureServices",
          "enum": [
            "None",
            "Logging",
            "Metrics",
            "AzureServices"
          ],
          "x-ms-enum": {
            "name": "Bypass",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Logging",
                "value": "Logging"
              },
              {
                "name": "Metrics",
                "value": "Metrics"
              },
              {
                "name": "AzureServices",
                "value": "AzureServices"
              }
            ]
          }
        },
        "resourceAccessRules": {
          "type": "array",
          "description": "Sets the resource access rules",
          "items": {
            "$ref": "#/definitions/ResourceAccessRule"
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "Sets the virtual network rules",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          }
        },
        "ipRules": {
          "type": "array",
          "description": "Sets the IP ACL rules",
          "items": {
            "$ref": "#/definitions/IPRule"
          }
        },
        "defaultAction": {
          "type": "string",
          "description": "Specifies the default action of allow or deny when no other rules match.",
          "default": "Allow",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": false
          }
        }
      },
      "required": [
        "defaultAction"
      ]
    },
    "ObjectReplicationPolicies": {
      "type": "object",
      "description": "List storage account object replication policies.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The replication policy between two storage accounts.",
          "items": {
            "$ref": "#/definitions/ObjectReplicationPolicy"
          }
        }
      }
    },
    "ObjectReplicationPolicy": {
      "type": "object",
      "description": "The replication policy between two storage accounts. Multiple rules can be defined in one policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ObjectReplicationPolicyProperties",
          "description": "Returns the Storage Account Object Replication Policy.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ObjectReplicationPolicyFilter": {
      "type": "object",
      "description": "Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.",
      "properties": {
        "prefixMatch": {
          "type": "array",
          "description": "Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.",
          "items": {
            "type": "string"
          }
        },
        "minCreationTime": {
          "type": "string",
          "description": "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z"
        }
      }
    },
    "ObjectReplicationPolicyProperties": {
      "type": "object",
      "description": "The Storage Account ObjectReplicationPolicy properties.",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "A unique id for object replication policy.",
          "readOnly": true
        },
        "enabledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates when the policy is enabled on the source account.",
          "readOnly": true
        },
        "sourceAccount": {
          "type": "string",
          "description": "Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false."
        },
        "destinationAccount": {
          "type": "string",
          "description": "Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false."
        },
        "rules": {
          "type": "array",
          "description": "The storage account object replication rules.",
          "items": {
            "$ref": "#/definitions/ObjectReplicationPolicyRule"
          }
        }
      },
      "required": [
        "sourceAccount",
        "destinationAccount"
      ]
    },
    "ObjectReplicationPolicyRule": {
      "type": "object",
      "description": "The replication policy rule between two containers.",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account."
        },
        "sourceContainer": {
          "type": "string",
          "description": "Required. Source container name."
        },
        "destinationContainer": {
          "type": "string",
          "description": "Required. Destination container name."
        },
        "filters": {
          "$ref": "#/definitions/ObjectReplicationPolicyFilter",
          "description": "Optional. An object that defines the filter set."
        }
      },
      "required": [
        "sourceContainer",
        "destinationContainer"
      ]
    },
    "ObjectType": {
      "type": "string",
      "description": "This is a required field. This field specifies the scope of the inventory created either at the blob or container level.",
      "enum": [
        "Blob",
        "Container"
      ],
      "x-ms-enum": {
        "name": "ObjectType",
        "modelAsString": true,
        "values": [
          {
            "name": "Blob",
            "value": "Blob"
          },
          {
            "name": "Container",
            "value": "Container"
          }
        ]
      }
    },
    "PermissionScope": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "string",
          "description": "The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c)."
        },
        "service": {
          "type": "string",
          "description": "The service used by the local user, e.g. blob, file."
        },
        "resourceName": {
          "type": "string",
          "description": "The name of resource, normally the container name or the file share name, used by the local user."
        }
      },
      "required": [
        "permissions",
        "service",
        "resourceName"
      ]
    },
    "Permissions": {
      "type": "string",
      "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
      "enum": [
        "r",
        "d",
        "w",
        "l",
        "a",
        "c",
        "u",
        "p"
      ],
      "x-ms-enum": {
        "name": "Permissions",
        "modelAsString": true,
        "values": [
          {
            "name": "r",
            "value": "r"
          },
          {
            "name": "d",
            "value": "d"
          },
          {
            "name": "w",
            "value": "w"
          },
          {
            "name": "l",
            "value": "l"
          },
          {
            "name": "a",
            "value": "a"
          },
          {
            "name": "c",
            "value": "c"
          },
          {
            "name": "u",
            "value": "u"
          },
          {
            "name": "p",
            "value": "p"
          }
        ]
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "List of private endpoint connection associated with the specified storage account",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          }
        ]
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "ProtectedAppendWritesHistory": {
      "type": "object",
      "description": "Protected append writes history setting for the blob container with Legal holds.",
      "properties": {
        "allowProtectedAppendWritesAll": {
          "type": "boolean",
          "description": "When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the tag was added.",
          "readOnly": true
        }
      }
    },
    "ProtocolSettings": {
      "type": "object",
      "description": "Protocol settings for file service",
      "properties": {
        "smb": {
          "$ref": "#/definitions/SmbSetting",
          "description": "Setting for SMB protocol"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Gets the status of the storage account at the time the operation was called.",
      "enum": [
        "Creating",
        "ResolvingDNS",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": false
      }
    },
    "PublicAccess": {
      "type": "string",
      "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
      "enum": [
        "Container",
        "Blob",
        "None"
      ],
      "x-ms-enum": {
        "name": "PublicAccess",
        "modelAsString": false
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "QueueProperties": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "A name-value pair that represents queue metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "approximateMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.",
          "readOnly": true
        }
      }
    },
    "QueueServiceProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Queue service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueueServicePropertiesProperties",
          "description": "The properties of a storage account’s Queue service.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "QueueServicePropertiesProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Queue service.",
      "properties": {
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service."
        }
      }
    },
    "Reason": {
      "type": "string",
      "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
      "enum": [
        "AccountNameInvalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "Reason",
        "modelAsString": false
      }
    },
    "ReasonCode": {
      "type": "string",
      "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC.",
      "enum": [
        "QuotaId",
        "NotAvailableForSubscription"
      ],
      "x-ms-enum": {
        "name": "ReasonCode",
        "modelAsString": true,
        "values": [
          {
            "name": "QuotaId",
            "value": "QuotaId"
          },
          {
            "name": "NotAvailableForSubscription",
            "value": "NotAvailableForSubscription"
          }
        ]
      }
    },
    "ResourceAccessRule": {
      "type": "object",
      "description": "Resource Access Rule.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "resourceId": {
          "type": "string",
          "description": "Resource Id"
        }
      }
    },
    "RestorePolicyProperties": {
      "type": "object",
      "description": "The blob service properties for blob restore policy",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Blob restore is enabled if set to true."
        },
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
          "minimum": 1,
          "maximum": 365
        },
        "lastEnabledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Deprecated in favor of minRestoreTime property.",
          "readOnly": true
        },
        "minRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the minimum date and time that the restore can be started.",
          "readOnly": true
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Restriction": {
      "type": "object",
      "description": "The restriction because of which SKU cannot be used.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of restrictions. As of now only possible value for this is location.",
          "readOnly": true
        },
        "values": {
          "type": "array",
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "reasonCode": {
          "$ref": "#/definitions/ReasonCode",
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
        }
      }
    },
    "RootSquashType": {
      "type": "string",
      "description": "The property is for NFS share only. The default is NoRootSquash.",
      "enum": [
        "NoRootSquash",
        "RootSquash",
        "AllSquash"
      ],
      "x-ms-enum": {
        "name": "RootSquashType",
        "modelAsString": true,
        "values": [
          {
            "name": "NoRootSquash",
            "value": "NoRootSquash"
          },
          {
            "name": "RootSquash",
            "value": "RootSquash"
          },
          {
            "name": "AllSquash",
            "value": "AllSquash"
          }
        ]
      }
    },
    "RoutingChoice": {
      "type": "string",
      "description": "Routing Choice defines the kind of network routing opted by the user.",
      "enum": [
        "MicrosoftRouting",
        "InternetRouting"
      ],
      "x-ms-enum": {
        "name": "RoutingChoice",
        "modelAsString": true,
        "values": [
          {
            "name": "MicrosoftRouting",
            "value": "MicrosoftRouting"
          },
          {
            "name": "InternetRouting",
            "value": "InternetRouting"
          }
        ]
      }
    },
    "RoutingPreference": {
      "type": "object",
      "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing",
      "properties": {
        "routingChoice": {
          "$ref": "#/definitions/RoutingChoice",
          "description": "Routing Choice defines the kind of network routing opted by the user."
        },
        "publishMicrosoftEndpoints": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether microsoft routing storage endpoints are to be published"
        },
        "publishInternetEndpoints": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether internet routing storage endpoints are to be published"
        }
      }
    },
    "RuleType": {
      "type": "string",
      "description": "The valid value is Lifecycle",
      "enum": [
        "Lifecycle"
      ],
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Lifecycle",
            "value": "Lifecycle"
          }
        ]
      }
    },
    "SKUCapability": {
      "type": "object",
      "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "A string value to indicate states of given capability. Possibly 'true' or 'false'.",
          "readOnly": true
        }
      }
    },
    "SasPolicy": {
      "type": "object",
      "description": "SasPolicy assigned to the storage account.",
      "properties": {
        "sasExpirationPeriod": {
          "type": "string",
          "description": "The SAS expiration period, DD.HH:MM:SS."
        },
        "expirationAction": {
          "type": "string",
          "description": "The SAS expiration action. Can only be Log.",
          "default": "Log",
          "enum": [
            "Log"
          ],
          "x-ms-enum": {
            "name": "ExpirationAction",
            "modelAsString": true,
            "values": [
              {
                "name": "Log",
                "value": "Log"
              }
            ]
          }
        }
      },
      "required": [
        "sasExpirationPeriod",
        "expirationAction"
      ]
    },
    "Schedule": {
      "type": "string",
      "description": "This is a required field. This field is used to schedule an inventory formation.",
      "enum": [
        "Daily",
        "Weekly"
      ],
      "x-ms-enum": {
        "name": "Schedule",
        "modelAsString": true,
        "values": [
          {
            "name": "Daily",
            "value": "Daily"
          },
          {
            "name": "Weekly",
            "value": "Weekly"
          }
        ]
      }
    },
    "ServiceSasParameters": {
      "type": "object",
      "description": "The parameters to list service SAS credentials of a specific resource.",
      "properties": {
        "canonicalizedResource": {
          "type": "string",
          "description": "The canonical path to the signed resource."
        },
        "signedResource": {
          "$ref": "#/definitions/SignedResource",
          "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).",
          "x-ms-client-name": "resource"
        },
        "signedPermission": {
          "$ref": "#/definitions/Permissions",
          "description": "The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
          "x-ms-client-name": "permissions"
        },
        "signedIp": {
          "type": "string",
          "description": "An IP address or a range of IP addresses from which to accept requests.",
          "x-ms-client-name": "IPAddressOrRange"
        },
        "signedProtocol": {
          "$ref": "#/definitions/HttpProtocol",
          "description": "The protocol permitted for a request made with the account SAS.",
          "x-ms-client-name": "protocols"
        },
        "signedStart": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the SAS becomes valid.",
          "x-ms-client-name": "sharedAccessStartTime"
        },
        "signedExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the shared access signature becomes invalid.",
          "x-ms-client-name": "sharedAccessExpiryTime"
        },
        "signedIdentifier": {
          "type": "string",
          "description": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.",
          "maxLength": 64,
          "x-ms-client-name": "identifier"
        },
        "startPk": {
          "type": "string",
          "description": "The start of partition key.",
          "x-ms-client-name": "partitionKeyStart"
        },
        "endPk": {
          "type": "string",
          "description": "The end of partition key.",
          "x-ms-client-name": "partitionKeyEnd"
        },
        "startRk": {
          "type": "string",
          "description": "The start of row key.",
          "x-ms-client-name": "rowKeyStart"
        },
        "endRk": {
          "type": "string",
          "description": "The end of row key.",
          "x-ms-client-name": "rowKeyEnd"
        },
        "keyToSign": {
          "type": "string",
          "description": "The key to sign the account SAS token with."
        },
        "rscc": {
          "type": "string",
          "description": "The response header override for cache control.",
          "x-ms-client-name": "cacheControl"
        },
        "rscd": {
          "type": "string",
          "description": "The response header override for content disposition.",
          "x-ms-client-name": "contentDisposition"
        },
        "rsce": {
          "type": "string",
          "description": "The response header override for content encoding.",
          "x-ms-client-name": "contentEncoding"
        },
        "rscl": {
          "type": "string",
          "description": "The response header override for content language.",
          "x-ms-client-name": "contentLanguage"
        },
        "rsct": {
          "type": "string",
          "description": "The response header override for content type.",
          "x-ms-client-name": "contentType"
        }
      },
      "required": [
        "canonicalizedResource"
      ]
    },
    "Services": {
      "type": "string",
      "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).",
      "enum": [
        "b",
        "q",
        "t",
        "f"
      ],
      "x-ms-enum": {
        "name": "Services",
        "modelAsString": true,
        "values": [
          {
            "name": "b",
            "value": "b"
          },
          {
            "name": "q",
            "value": "q"
          },
          {
            "name": "t",
            "value": "t"
          },
          {
            "name": "f",
            "value": "f"
          }
        ]
      }
    },
    "ShareAccessTier": {
      "type": "string",
      "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
      "enum": [
        "TransactionOptimized",
        "Hot",
        "Cool",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "ShareAccessTier",
        "modelAsString": true,
        "values": [
          {
            "name": "TransactionOptimized",
            "value": "TransactionOptimized"
          },
          {
            "name": "Hot",
            "value": "Hot"
          },
          {
            "name": "Cool",
            "value": "Cool"
          },
          {
            "name": "Premium",
            "value": "Premium"
          }
        ]
      }
    },
    "SignedIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An unique identifier of the stored access policy."
        },
        "accessPolicy": {
          "$ref": "#/definitions/AccessPolicy",
          "description": "Access policy"
        }
      }
    },
    "SignedResource": {
      "type": "string",
      "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).",
      "enum": [
        "b",
        "c",
        "f",
        "s"
      ],
      "x-ms-enum": {
        "name": "SignedResource",
        "modelAsString": true,
        "values": [
          {
            "name": "b",
            "value": "b"
          },
          {
            "name": "c",
            "value": "c"
          },
          {
            "name": "f",
            "value": "f"
          },
          {
            "name": "s",
            "value": "s"
          }
        ]
      }
    },
    "SignedResourceTypes": {
      "type": "string",
      "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.",
      "enum": [
        "s",
        "c",
        "o"
      ],
      "x-ms-enum": {
        "name": "SignedResourceTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "s",
            "value": "s"
          },
          {
            "name": "c",
            "value": "c"
          },
          {
            "name": "o",
            "value": "o"
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "The SKU of the storage account.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The SKU tier. This is based on the SKU name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuConversionStatus": {
      "type": "string",
      "description": "This property indicates the current sku conversion status.",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "SkuConversionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "SkuInformation": {
      "type": "object",
      "description": "Storage SKU and its properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The SKU tier. This is based on the SKU name.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource, usually it is 'storageAccounts'.",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Indicates the type of storage account.",
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "capabilities": {
          "type": "array",
          "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
          "items": {
            "$ref": "#/definitions/SKUCapability"
          },
          "readOnly": true
        },
        "restrictions": {
          "type": "array",
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
          "items": {
            "$ref": "#/definitions/Restriction"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
      "enum": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard_LRS",
            "value": "Standard_LRS"
          },
          {
            "name": "Standard_GRS",
            "value": "Standard_GRS"
          },
          {
            "name": "Standard_RAGRS",
            "value": "Standard_RAGRS"
          },
          {
            "name": "Standard_ZRS",
            "value": "Standard_ZRS"
          },
          {
            "name": "Premium_LRS",
            "value": "Premium_LRS"
          },
          {
            "name": "Premium_ZRS",
            "value": "Premium_ZRS"
          },
          {
            "name": "Standard_GZRS",
            "value": "Standard_GZRS"
          },
          {
            "name": "Standard_RAGZRS",
            "value": "Standard_RAGZRS"
          }
        ]
      }
    },
    "SkuTier": {
      "type": "string",
      "description": "The SKU tier. This is based on the SKU name.",
      "enum": [
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "SmbSetting": {
      "type": "object",
      "description": "Setting for SMB protocol",
      "properties": {
        "multichannel": {
          "$ref": "#/definitions/Multichannel",
          "description": "Multichannel setting. Applies to Premium FileStorage only."
        },
        "versions": {
          "type": "string",
          "description": "SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'."
        },
        "authenticationMethods": {
          "type": "string",
          "description": "SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'."
        },
        "kerberosTicketEncryption": {
          "type": "string",
          "description": "Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'"
        },
        "channelEncryption": {
          "type": "string",
          "description": "SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'."
        }
      }
    },
    "SshPublicKey": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. It is used to store the function/usage of the key"
        },
        "key": {
          "type": "string",
          "description": "Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB"
        }
      }
    },
    "State": {
      "type": "string",
      "description": "Gets the state of virtual network rule.",
      "enum": [
        "Provisioning",
        "Deprovisioning",
        "Succeeded",
        "Failed",
        "NetworkSourceDeleted"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning"
          },
          {
            "name": "Deprovisioning",
            "value": "Deprovisioning"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "NetworkSourceDeleted",
            "value": "NetworkSourceDeleted"
          }
        ]
      }
    },
    "StorageAccount": {
      "type": "object",
      "description": "The storage account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "Properties of the storage account.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets the SKU.",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Gets the Kind.",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StorageAccountCheckNameAvailabilityParameters": {
      "type": "object",
      "description": "The parameters used to check the availability of the storage account name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The storage account name."
        },
        "type": {
          "type": "string",
          "description": "The type of resource, Microsoft.Storage/storageAccounts",
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "StorageAccountCreateParameters": {
      "type": "object",
      "description": "The parameters used when creating a storage account.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Required. Gets or sets the SKU name."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Required. Indicates the type of storage account."
        },
        "location": {
          "type": "string",
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location"
        },
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/StorageAccountPropertiesCreateParameters",
          "description": "The parameters used to create the storage account.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "sku",
        "kind",
        "location"
      ]
    },
    "StorageAccountInternetEndpoints": {
      "type": "object",
      "description": "The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
      "properties": {
        "blob": {
          "type": "string",
          "description": "Gets the blob endpoint.",
          "readOnly": true
        },
        "file": {
          "type": "string",
          "description": "Gets the file endpoint.",
          "readOnly": true
        },
        "web": {
          "type": "string",
          "description": "Gets the web endpoint.",
          "readOnly": true
        },
        "dfs": {
          "type": "string",
          "description": "Gets the dfs endpoint.",
          "readOnly": true
        }
      }
    },
    "StorageAccountKey": {
      "type": "object",
      "description": "An access key for the storage account.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the key.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Base 64-encoded value of the key.",
          "readOnly": true
        },
        "permissions": {
          "$ref": "#/definitions/KeyPermission",
          "description": "Permissions for the key -- read-only or full permissions.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of the key, in round trip date format.",
          "readOnly": true
        }
      }
    },
    "StorageAccountListKeysResult": {
      "type": "object",
      "description": "The response from the ListKeys operation.",
      "properties": {
        "keys": {
          "type": "array",
          "description": "Gets the list of storage account keys and their properties for the specified storage account.",
          "items": {
            "$ref": "#/definitions/StorageAccountKey"
          },
          "readOnly": true
        }
      }
    },
    "StorageAccountListResult": {
      "type": "object",
      "description": "The response of a StorageAccount list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageAccount items on this page",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageAccountMicrosoftEndpoints": {
      "type": "object",
      "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.",
      "properties": {
        "blob": {
          "type": "string",
          "description": "Gets the blob endpoint.",
          "readOnly": true
        },
        "queue": {
          "type": "string",
          "description": "Gets the queue endpoint.",
          "readOnly": true
        },
        "table": {
          "type": "string",
          "description": "Gets the table endpoint.",
          "readOnly": true
        },
        "file": {
          "type": "string",
          "description": "Gets the file endpoint.",
          "readOnly": true
        },
        "web": {
          "type": "string",
          "description": "Gets the web endpoint.",
          "readOnly": true
        },
        "dfs": {
          "type": "string",
          "description": "Gets the dfs endpoint.",
          "readOnly": true
        }
      }
    },
    "StorageAccountProperties": {
      "type": "object",
      "description": "Properties of the storage account.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets the status of the storage account at the time the operation was called.",
          "readOnly": true
        },
        "primaryEndpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.",
          "readOnly": true
        },
        "primaryLocation": {
          "type": "string",
          "description": "Gets the location of the primary data center for the storage account.",
          "readOnly": true
        },
        "statusOfPrimary": {
          "$ref": "#/definitions/AccountStatus",
          "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
          "readOnly": true
        },
        "lastGeoFailoverTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
          "readOnly": true
        },
        "secondaryLocation": {
          "type": "string",
          "description": "Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
          "readOnly": true
        },
        "statusOfSecondary": {
          "$ref": "#/definitions/AccountStatus",
          "description": "Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the creation date and time of the storage account in UTC.",
          "readOnly": true
        },
        "customDomain": {
          "$ref": "#/definitions/CustomDomain",
          "description": "Gets the custom domain the user assigned to this storage account.",
          "readOnly": true
        },
        "sasPolicy": {
          "$ref": "#/definitions/SasPolicy",
          "description": "SasPolicy assigned to the storage account.",
          "readOnly": true
        },
        "keyPolicy": {
          "$ref": "#/definitions/KeyPolicy",
          "description": "KeyPolicy assigned to the storage account.",
          "readOnly": true
        },
        "keyCreationTime": {
          "$ref": "#/definitions/KeyCreationTime",
          "description": "Storage account keys creation time.",
          "readOnly": true
        },
        "secondaryEndpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.",
          "readOnly": true
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Encryption settings to be used for server-side encryption for the storage account.",
          "readOnly": true
        },
        "accessTier": {
          "$ref": "#/definitions/AccessTier",
          "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.",
          "readOnly": true
        },
        "azureFilesIdentityBasedAuthentication": {
          "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication",
          "description": "Provides the identity based authentication settings for Azure Files."
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean",
          "description": "Allows https traffic only to storage service if sets to true.",
          "x-ms-client-name": "enableHttpsTrafficOnly"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "Network rule set",
          "readOnly": true,
          "x-ms-client-name": "networkRuleSet"
        },
        "isSftpEnabled": {
          "type": "boolean",
          "description": "Enables Secure File Transfer Protocol, if set to true",
          "x-ms-client-name": "IsSftpEnabled"
        },
        "isLocalUserEnabled": {
          "type": "boolean",
          "description": "Enables local users feature, if set to true",
          "x-ms-client-name": "IsLocalUserEnabled"
        },
        "isHnsEnabled": {
          "type": "boolean",
          "description": "Account HierarchicalNamespace enabled if sets to true.",
          "x-ms-client-name": "IsHnsEnabled"
        },
        "geoReplicationStats": {
          "$ref": "#/definitions/GeoReplicationStats",
          "description": "Geo Replication Stats",
          "readOnly": true
        },
        "failoverInProgress": {
          "type": "boolean",
          "description": "If the failover is in progress, the value will be true, otherwise, it will be null.",
          "readOnly": true
        },
        "largeFileSharesState": {
          "$ref": "#/definitions/LargeFileSharesState",
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified storage account",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "routingPreference": {
          "$ref": "#/definitions/RoutingPreference",
          "description": "Maintains information about the network routing choice opted by the user for data transfer"
        },
        "blobRestoreStatus": {
          "$ref": "#/definitions/BlobRestoreStatus",
          "description": "Blob restore status",
          "readOnly": true
        },
        "allowBlobPublicAccess": {
          "type": "boolean",
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/MinimumTlsVersion",
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
        },
        "allowSharedKeyAccess": {
          "type": "boolean",
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
        },
        "isNfsV3Enabled": {
          "type": "boolean",
          "description": "NFS 3.0 protocol support enabled if set to true.",
          "x-ms-client-name": "enableNfsV3"
        },
        "allowCrossTenantReplication": {
          "type": "boolean",
          "description": "Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
        },
        "immutableStorageWithVersioning": {
          "$ref": "#/definitions/ImmutableStorageAccount",
          "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
        },
        "allowedCopyScope": {
          "$ref": "#/definitions/AllowedCopyScope",
          "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
        },
        "storageAccountSkuConversionStatus": {
          "$ref": "#/definitions/StorageAccountSkuConversionStatus",
          "description": "This property is readOnly and is set by server during asynchronous storage account sku conversion operations."
        },
        "dnsEndpointType": {
          "$ref": "#/definitions/DnsEndpointType",
          "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
        }
      }
    },
    "StorageAccountPropertiesCreateParameters": {
      "type": "object",
      "description": "The parameters used to create the storage account.",
      "properties": {
        "allowedCopyScope": {
          "$ref": "#/definitions/AllowedCopyScope",
          "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
        },
        "sasPolicy": {
          "$ref": "#/definitions/SasPolicy",
          "description": "SasPolicy assigned to the storage account."
        },
        "keyPolicy": {
          "$ref": "#/definitions/KeyPolicy",
          "description": "KeyPolicy assigned to the storage account."
        },
        "customDomain": {
          "$ref": "#/definitions/CustomDomain",
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Encryption settings to be used for server-side encryption for the storage account."
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "Network rule set",
          "x-ms-client-name": "networkRuleSet"
        },
        "accessTier": {
          "$ref": "#/definitions/AccessTier",
          "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type."
        },
        "azureFilesIdentityBasedAuthentication": {
          "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication",
          "description": "Provides the identity based authentication settings for Azure Files."
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean",
          "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.",
          "x-ms-client-name": "enableHttpsTrafficOnly"
        },
        "isSftpEnabled": {
          "type": "boolean",
          "description": "Enables Secure File Transfer Protocol, if set to true",
          "x-ms-client-name": "IsSftpEnabled"
        },
        "isLocalUserEnabled": {
          "type": "boolean",
          "description": "Enables local users feature, if set to true",
          "x-ms-client-name": "IsLocalUserEnabled"
        },
        "isHnsEnabled": {
          "type": "boolean",
          "description": "Account HierarchicalNamespace enabled if sets to true.",
          "x-ms-client-name": "IsHnsEnabled"
        },
        "largeFileSharesState": {
          "$ref": "#/definitions/LargeFileSharesState",
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
        },
        "routingPreference": {
          "$ref": "#/definitions/RoutingPreference",
          "description": "Maintains information about the network routing choice opted by the user for data transfer"
        },
        "allowBlobPublicAccess": {
          "type": "boolean",
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/MinimumTlsVersion",
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
        },
        "allowSharedKeyAccess": {
          "type": "boolean",
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
        },
        "isNfsV3Enabled": {
          "type": "boolean",
          "description": "NFS 3.0 protocol support enabled if set to true.",
          "x-ms-client-name": "enableNfsV3"
        },
        "allowCrossTenantReplication": {
          "type": "boolean",
          "description": "Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
        },
        "immutableStorageWithVersioning": {
          "$ref": "#/definitions/ImmutableStorageAccount",
          "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default."
        },
        "dnsEndpointType": {
          "$ref": "#/definitions/DnsEndpointType",
          "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
        }
      }
    },
    "StorageAccountPropertiesUpdateParameters": {
      "type": "object",
      "description": "The parameters used when updating a storage account.",
      "properties": {
        "customDomain": {
          "$ref": "#/definitions/CustomDomain",
          "description": "Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled."
        },
        "sasPolicy": {
          "$ref": "#/definitions/SasPolicy",
          "description": "SasPolicy assigned to the storage account."
        },
        "keyPolicy": {
          "$ref": "#/definitions/KeyPolicy",
          "description": "KeyPolicy assigned to the storage account."
        },
        "accessTier": {
          "$ref": "#/definitions/AccessTier",
          "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type."
        },
        "azureFilesIdentityBasedAuthentication": {
          "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication",
          "description": "Provides the identity based authentication settings for Azure Files."
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean",
          "description": "Allows https traffic only to storage service if sets to true.",
          "x-ms-client-name": "enableHttpsTrafficOnly"
        },
        "isSftpEnabled": {
          "type": "boolean",
          "description": "Enables Secure File Transfer Protocol, if set to true",
          "x-ms-client-name": "IsSftpEnabled"
        },
        "isLocalUserEnabled": {
          "type": "boolean",
          "description": "Enables local users feature, if set to true",
          "x-ms-client-name": "IsLocalUserEnabled"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "Network rule set",
          "x-ms-client-name": "networkRuleSet"
        },
        "largeFileSharesState": {
          "$ref": "#/definitions/LargeFileSharesState",
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
        },
        "routingPreference": {
          "$ref": "#/definitions/RoutingPreference",
          "description": "Maintains information about the network routing choice opted by the user for data transfer"
        },
        "allowBlobPublicAccess": {
          "type": "boolean",
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/MinimumTlsVersion",
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
        },
        "allowSharedKeyAccess": {
          "type": "boolean",
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
        },
        "allowCrossTenantReplication": {
          "type": "boolean",
          "description": "Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean",
          "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
        },
        "immutableStorageWithVersioning": {
          "$ref": "#/definitions/ImmutableStorageAccount",
          "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
        },
        "allowedCopyScope": {
          "$ref": "#/definitions/AllowedCopyScope",
          "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
        },
        "dnsEndpointType": {
          "$ref": "#/definitions/DnsEndpointType",
          "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
        }
      }
    },
    "StorageAccountRegenerateKeyParameters": {
      "type": "object",
      "description": "The parameters used to regenerate the storage account key.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."
        }
      },
      "required": [
        "keyName"
      ]
    },
    "StorageAccountSkuConversionStatus": {
      "type": "object",
      "description": "This defines the sku conversion status object for asynchronous sku conversions.",
      "properties": {
        "skuConversionStatus": {
          "$ref": "#/definitions/SkuConversionStatus",
          "description": "This property indicates the current sku conversion status.",
          "readOnly": true
        },
        "targetSkuName": {
          "$ref": "#/definitions/SkuName",
          "description": "This property represents the target sku name to which the account sku is being converted asynchronously."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property represents the sku conversion start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property represents the sku conversion end time.",
          "readOnly": true
        }
      }
    },
    "StorageAccountUpdateParameters": {
      "type": "object",
      "description": "The parameters that can be provided when updating the storage account properties.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value."
        },
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/StorageAccountPropertiesUpdateParameters",
          "description": "The parameters used when updating a storage account.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server."
        }
      }
    },
    "StorageQueue": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueueProperties",
          "description": "Queue resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageSkuListResult": {
      "type": "object",
      "description": "The response from the List Storage SKUs operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Get the list result of storage SKUs and their properties.",
          "items": {
            "$ref": "#/definitions/SkuInformation"
          },
          "readOnly": true
        }
      }
    },
    "Table": {
      "type": "object",
      "description": "Properties of the table, including Id, resource name, resource type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableProperties",
          "description": "Table resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TableAccessPolicy": {
      "type": "object",
      "description": "Table Access Policy Properties Object.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the access policy"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry time of the access policy"
        },
        "permission": {
          "type": "string",
          "description": "Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'"
        }
      },
      "required": [
        "permission"
      ]
    },
    "TableProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Table name under the specified account",
          "readOnly": true
        },
        "signedIdentifiers": {
          "type": "array",
          "description": "List of stored access policies specified on the table.",
          "items": {
            "$ref": "#/definitions/TableSignedIdentifier"
          }
        }
      }
    },
    "TableServiceProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Table service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableServicePropertiesProperties",
          "description": "The properties of a storage account’s Table service.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TableServicePropertiesProperties": {
      "type": "object",
      "description": "The properties of a storage account’s Table service.",
      "properties": {
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service."
        }
      }
    },
    "TableSignedIdentifier": {
      "type": "object",
      "description": "Object to set Table Access Policy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique-64-character-value of the stored access policy."
        },
        "accessPolicy": {
          "$ref": "#/definitions/TableAccessPolicy",
          "description": "Access policy"
        }
      },
      "required": [
        "id"
      ]
    },
    "TagFilter": {
      "type": "object",
      "description": "Blob index tag based filtering for blob objects",
      "properties": {
        "name": {
          "type": "string",
          "description": "This is the filter tag name, it can have 1 - 128 characters",
          "minLength": 1,
          "maxLength": 128
        },
        "op": {
          "type": "string",
          "description": "This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported"
        },
        "value": {
          "type": "string",
          "description": "This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters",
          "maxLength": 256
        }
      },
      "required": [
        "name",
        "op",
        "value"
      ]
    },
    "TagProperty": {
      "type": "object",
      "description": "A tag of the LegalHold of a blob container.",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag value.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the tag was added.",
          "readOnly": true
        },
        "objectIdentifier": {
          "type": "string",
          "description": "Returns the Object ID of the user who added the tag.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Returns the Tenant ID that issued the token for the user who added the tag.",
          "readOnly": true
        },
        "upn": {
          "type": "string",
          "description": "Returns the User Principal Name of the user who added the tag.",
          "readOnly": true
        }
      }
    },
    "TypeSpec.Http.OkResponse": {
      "type": "object",
      "description": "The request has succeeded."
    },
    "UpdateHistoryProperty": {
      "type": "object",
      "description": "An update history of the ImmutabilityPolicy of a blob container.",
      "properties": {
        "update": {
          "$ref": "#/definitions/ImmutabilityPolicyUpdateType",
          "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.",
          "readOnly": true
        },
        "immutabilityPeriodSinceCreationInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Returns the date and time the ImmutabilityPolicy was updated.",
          "readOnly": true
        },
        "objectIdentifier": {
          "type": "string",
          "description": "Returns the Object ID of the user who updated the ImmutabilityPolicy.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.",
          "readOnly": true
        },
        "upn": {
          "type": "string",
          "description": "Returns the User Principal Name of the user who updated the ImmutabilityPolicy.",
          "readOnly": true
        },
        "allowProtectedAppendWrites": {
          "type": "boolean",
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API."
        },
        "allowProtectedAppendWritesAll": {
          "type": "boolean",
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive."
        }
      }
    },
    "Usage": {
      "type": "object",
      "description": "Describes Storage Resource Usage.",
      "properties": {
        "unit": {
          "$ref": "#/definitions/UsageUnit",
          "description": "Gets the unit of measurement.",
          "readOnly": true
        },
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the current count of the allocated resources in the subscription.",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the maximum count of the resources that can be allocated in the subscription.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "Gets the name of the type of usage.",
          "readOnly": true
        }
      }
    },
    "UsageListResult": {
      "type": "object",
      "description": "The response from the List Usages operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Gets or sets the list of Storage Resource Usages.",
          "items": {
            "$ref": "#/definitions/Usage"
          }
        }
      }
    },
    "UsageName": {
      "type": "object",
      "description": "The usage names that can be used; currently limited to StorageAccount.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Gets a string describing the resource name.",
          "readOnly": true
        },
        "localizedValue": {
          "type": "string",
          "description": "Gets a localized string describing the resource name.",
          "readOnly": true
        }
      }
    },
    "UsageUnit": {
      "type": "string",
      "description": "Gets the unit of measurement.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountsPerSecond",
        "BytesPerSecond"
      ],
      "x-ms-enum": {
        "name": "UsageUnit",
        "modelAsString": false
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "UserAssignedIdentity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of the identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client ID of the identity.",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkRule": {
      "type": "object",
      "description": "Virtual Network rule.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "x-ms-client-name": "virtualNetworkResourceId"
        },
        "action": {
          "type": "string",
          "description": "The action of virtual network rule.",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "state": {
          "$ref": "#/definitions/State",
          "description": "Gets the state of virtual network rule."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  "parameters": {}
}
