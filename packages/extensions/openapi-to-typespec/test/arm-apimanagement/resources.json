{
  "Resources": {
    "ApiContract": [
      {
        "Name": "ApiContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}",
          "Method": "GET",
          "OperationID": "Api_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the API specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}",
          "Method": "HEAD",
          "OperationID": "Api_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the API specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}",
          "Method": "PUT",
          "OperationID": "Api_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates new or updates existing specified API of the API Management service instance."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}",
          "Method": "PATCH",
          "OperationID": "Api_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the specified API of the API Management service instance."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}",
          "Method": "DELETE",
          "OperationID": "Api_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified API of the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis",
            "Method": "GET",
            "OperationID": "Api_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all APIs of the API Management service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions",
            "Method": "GET",
            "OperationID": "ApiRevision_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all revisions of an API."
          },
          {
            "Name": "ListByApis",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products",
            "Method": "GET",
            "OperationID": "ApiProduct_ListByApis",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApis",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all Products, which the API is part of."
          },
          {
            "Name": "ListByTags",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags",
            "Method": "GET",
            "OperationID": "Operation_ListByTags",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByTags",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of operations associated with tags."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "ApiContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis",
        "ResourceKey": "apiId",
        "ResourceKeySegment": "apis",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "ApiReleaseContract": [
      {
        "Name": "ApiReleaseContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}",
          "Method": "GET",
          "OperationID": "ApiRelease_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Returns the details of an API release."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}",
          "Method": "HEAD",
          "OperationID": "ApiRelease_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Returns the etag of an API release."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}",
          "Method": "PUT",
          "OperationID": "ApiRelease_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Release for the API."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}",
          "Method": "PATCH",
          "OperationID": "ApiRelease_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the release of the API specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}",
          "Method": "DELETE",
          "OperationID": "ApiRelease_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified release in the API."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases",
            "Method": "GET",
            "OperationID": "ApiRelease_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "ApiReleaseContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/releases",
        "ResourceKey": "releaseId",
        "ResourceKeySegment": "releases",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "OperationContract": [
      {
        "Name": "OperationContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}",
          "Method": "GET",
          "OperationID": "ApiOperation_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the API Operation specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}",
          "Method": "HEAD",
          "OperationID": "ApiOperation_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the API operation specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}",
          "Method": "PUT",
          "OperationID": "ApiOperation_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new operation in the API or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}",
          "Method": "PATCH",
          "OperationID": "ApiOperation_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the operation in the API specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}",
          "Method": "DELETE",
          "OperationID": "ApiOperation_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified operation in the API."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations",
            "Method": "GET",
            "OperationID": "ApiOperation_ListByApi",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApi",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of the operations for the specified API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "OperationContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/operations",
        "ResourceKey": "operationId",
        "ResourceKeySegment": "operations",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "PolicyContract": [
      {
        "Name": "PolicyContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}",
          "Method": "GET",
          "OperationID": "ApiOperationPolicy_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the policy configuration at the API Operation level."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}",
          "Method": "HEAD",
          "OperationID": "ApiOperationPolicy_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ApiOperationPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the API Operation level."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ApiOperationPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the API Operation level."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}",
          "Method": "DELETE",
          "OperationID": "ApiOperationPolicy_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the policy configuration at the Api Operation."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies",
            "Method": "GET",
            "OperationID": "ApiOperationPolicy_ListByOperation",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByOperation",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Get the list of policy configuration at the API Operation level."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "OperationContract"
        ],
        "SwaggerModelName": "PolicyContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/operations/policies",
        "ResourceKey": "policyId",
        "ResourceKeySegment": "policies",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "PolicyContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}",
          "Method": "GET",
          "OperationID": "ApiPolicy_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the policy configuration at the API level."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}",
          "Method": "HEAD",
          "OperationID": "ApiPolicy_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the API policy specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ApiPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the API."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ApiPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the API."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}",
          "Method": "DELETE",
          "OperationID": "ApiPolicy_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the policy configuration at the Api."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies",
            "Method": "GET",
            "OperationID": "ApiPolicy_ListByApi",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApi",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Get the policy configuration at the API level."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "PolicyContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/policies",
        "ResourceKey": "policyId",
        "ResourceKeySegment": "policies",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "PolicyContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}",
          "Method": "GET",
          "OperationID": "Policy_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the Global policy definition of the Api Management service."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}",
          "Method": "HEAD",
          "OperationID": "Policy_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Global policy definition in the Api Management service."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "Policy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the global policy configuration of the Api Management service."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "Policy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the global policy configuration of the Api Management service."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}",
          "Method": "DELETE",
          "OperationID": "Policy_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the global policy configuration of the Api Management Service."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies",
            "Method": "GET",
            "OperationID": "Policy_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists all the Global Policy definitions of the Api Management service."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PolicyContract",
        "ResourceType": "Microsoft.ApiManagement/service/policies",
        "ResourceKey": "policyId",
        "ResourceKeySegment": "policies",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "PolicyContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}",
          "Method": "GET",
          "OperationID": "ProductPolicy_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the policy configuration at the Product level."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}",
          "Method": "HEAD",
          "OperationID": "ProductPolicy_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the ETag of the policy configuration at the Product level."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ProductPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the Product."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}",
          "Method": "PUT",
          "OperationID": "ProductPolicy_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates policy configuration for the Product."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}",
          "Method": "DELETE",
          "OperationID": "ProductPolicy_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the policy configuration at the Product."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies",
            "Method": "GET",
            "OperationID": "ProductPolicy_ListByProduct",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByProduct",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Get the policy configuration at the Product level."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ProductContract"
        ],
        "SwaggerModelName": "PolicyContract",
        "ResourceType": "Microsoft.ApiManagement/service/products/policies",
        "ResourceKey": "policyId",
        "ResourceKeySegment": "policies",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "TagContract": [
      {
        "Name": "TagContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}",
          "Method": "GET",
          "OperationID": "Tag_GetByOperation",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get tag associated with the Operation."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}",
          "Method": "HEAD",
          "OperationID": "Tag_GetEntityStateByOperation",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state version of the tag specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToOperation",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Operation."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToOperation",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Operation."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}",
          "Method": "DELETE",
          "OperationID": "Tag_DetachFromOperation",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Detach the tag from the Operation."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags",
            "Method": "GET",
            "OperationID": "Tag_ListByOperation",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByOperation",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all Tags associated with the Operation."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "OperationContract"
        ],
        "SwaggerModelName": "TagContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/operations/tags",
        "ResourceKey": "tagId",
        "ResourceKeySegment": "tags",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "TagContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}",
          "Method": "GET",
          "OperationID": "Tag_GetByApi",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get tag associated with the API."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}",
          "Method": "HEAD",
          "OperationID": "Tag_GetEntityStateByApi",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state version of the tag specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToApi",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Api."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToApi",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Api."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}",
          "Method": "DELETE",
          "OperationID": "Tag_DetachFromApi",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Detach the tag from the Api."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags",
            "Method": "GET",
            "OperationID": "Tag_ListByApi",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApi",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all Tags associated with the API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "TagContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/tags",
        "ResourceKey": "tagId",
        "ResourceKeySegment": "tags",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "TagContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}",
          "Method": "GET",
          "OperationID": "Tag_GetByProduct",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get tag associated with the Product."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}",
          "Method": "HEAD",
          "OperationID": "Tag_GetEntityStateByProduct",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state version of the tag specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToProduct",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Product."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_AssignToProduct",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign tag to the Product."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}",
          "Method": "DELETE",
          "OperationID": "Tag_DetachFromProduct",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Detach the tag from the Product."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags",
            "Method": "GET",
            "OperationID": "Tag_ListByProduct",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByProduct",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all Tags associated with the Product."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ProductContract"
        ],
        "SwaggerModelName": "TagContract",
        "ResourceType": "Microsoft.ApiManagement/service/products/tags",
        "ResourceKey": "tagId",
        "ResourceKeySegment": "tags",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "TagContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}",
          "Method": "GET",
          "OperationID": "Tag_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the tag specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}",
          "Method": "HEAD",
          "OperationID": "Tag_GetEntityState",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state version of the tag specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}",
          "Method": "PUT",
          "OperationID": "Tag_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a tag."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}",
          "Method": "PATCH",
          "OperationID": "Tag_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the tag specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}",
          "Method": "DELETE",
          "OperationID": "Tag_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific tag of the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags",
            "Method": "GET",
            "OperationID": "Tag_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of tags defined within a service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "TagContract",
        "ResourceType": "Microsoft.ApiManagement/service/tags",
        "ResourceKey": "tagId",
        "ResourceKeySegment": "tags",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "SchemaContract": [
      {
        "Name": "SchemaContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}",
          "Method": "GET",
          "OperationID": "ApiSchema_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the schema configuration at the API level."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}",
          "Method": "HEAD",
          "OperationID": "ApiSchema_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the schema specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}",
          "Method": "PUT",
          "OperationID": "ApiSchema_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates schema configuration for the API."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}",
          "Method": "PUT",
          "OperationID": "ApiSchema_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates schema configuration for the API."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}",
          "Method": "DELETE",
          "OperationID": "ApiSchema_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the schema configuration at the Api."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas",
            "Method": "GET",
            "OperationID": "ApiSchema_ListByApi",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApi",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Get the schema configuration at the API level."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "SchemaContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/schemas",
        "ResourceKey": "schemaId",
        "ResourceKeySegment": "schemas",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "DiagnosticContract": [
      {
        "Name": "DiagnosticContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}",
          "Method": "GET",
          "OperationID": "ApiDiagnostic_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Diagnostic for an API specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}",
          "Method": "HEAD",
          "OperationID": "ApiDiagnostic_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}",
          "Method": "PUT",
          "OperationID": "ApiDiagnostic_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Diagnostic for an API or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}",
          "Method": "PATCH",
          "OperationID": "ApiDiagnostic_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the Diagnostic for an API specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}",
          "Method": "DELETE",
          "OperationID": "ApiDiagnostic_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified Diagnostic from an API."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics",
            "Method": "GET",
            "OperationID": "ApiDiagnostic_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all diagnostics of an API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "DiagnosticContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/diagnostics",
        "ResourceKey": "diagnosticId",
        "ResourceKeySegment": "diagnostics",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "DiagnosticContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}",
          "Method": "GET",
          "OperationID": "Diagnostic_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Diagnostic specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}",
          "Method": "HEAD",
          "OperationID": "Diagnostic_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Diagnostic specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}",
          "Method": "PUT",
          "OperationID": "Diagnostic_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Diagnostic or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}",
          "Method": "PATCH",
          "OperationID": "Diagnostic_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the Diagnostic specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}",
          "Method": "DELETE",
          "OperationID": "Diagnostic_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified Diagnostic."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics",
            "Method": "GET",
            "OperationID": "Diagnostic_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all diagnostics of the API Management service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "DiagnosticContract",
        "ResourceType": "Microsoft.ApiManagement/service/diagnostics",
        "ResourceKey": "diagnosticId",
        "ResourceKeySegment": "diagnostics",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "IssueContract": [
      {
        "Name": "IssueContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}",
          "Method": "GET",
          "OperationID": "ApiIssue_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Issue for an API specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}",
          "Method": "HEAD",
          "OperationID": "ApiIssue_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Issue for an API specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}",
          "Method": "PUT",
          "OperationID": "ApiIssue_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Issue for an API or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}",
          "Method": "PATCH",
          "OperationID": "ApiIssue_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates an existing issue for an API."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}",
          "Method": "DELETE",
          "OperationID": "ApiIssue_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified Issue from an API."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues",
            "Method": "GET",
            "OperationID": "ApiIssue_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all issues associated with the specified API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "IssueContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/issues",
        "ResourceKey": "issueId",
        "ResourceKeySegment": "issues",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "IssueContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}",
          "Method": "GET",
          "OperationID": "Issue_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets API Management issue details"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues",
            "Method": "GET",
            "OperationID": "Issue_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of issues in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "IssueContract",
        "ResourceType": "Microsoft.ApiManagement/service/issues",
        "ResourceKey": "issueId",
        "ResourceKeySegment": "issues",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "IssueCommentContract": [
      {
        "Name": "IssueCommentContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}",
          "Method": "GET",
          "OperationID": "ApiIssueComment_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the issue Comment for an API specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}",
          "Method": "HEAD",
          "OperationID": "ApiIssueComment_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the issue Comment for an API specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}",
          "Method": "PUT",
          "OperationID": "ApiIssueComment_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Comment for the Issue in an API or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}",
          "Method": "PUT",
          "OperationID": "ApiIssueComment_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Comment for the Issue in an API or updates an existing one."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}",
          "Method": "DELETE",
          "OperationID": "ApiIssueComment_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified comment from an Issue."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments",
            "Method": "GET",
            "OperationID": "ApiIssueComment_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all comments for the Issue associated with the specified API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "IssueContract"
        ],
        "SwaggerModelName": "IssueCommentContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/issues/comments",
        "ResourceKey": "commentId",
        "ResourceKeySegment": "comments",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "IssueAttachmentContract": [
      {
        "Name": "IssueAttachmentContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}",
          "Method": "GET",
          "OperationID": "ApiIssueAttachment_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the issue Attachment for an API specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}",
          "Method": "HEAD",
          "OperationID": "ApiIssueAttachment_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the issue Attachment for an API specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}",
          "Method": "PUT",
          "OperationID": "ApiIssueAttachment_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Attachment for the Issue in an API or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}",
          "Method": "PUT",
          "OperationID": "ApiIssueAttachment_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Attachment for the Issue in an API or updates an existing one."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}",
          "Method": "DELETE",
          "OperationID": "ApiIssueAttachment_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified comment from an Issue."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments",
            "Method": "GET",
            "OperationID": "ApiIssueAttachment_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all attachments for the Issue associated with the specified API."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "IssueContract"
        ],
        "SwaggerModelName": "IssueAttachmentContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/issues/attachments",
        "ResourceKey": "attachmentId",
        "ResourceKeySegment": "attachments",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "TagDescriptionContract": [
      {
        "Name": "TagDescriptionContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}",
          "Method": "GET",
          "OperationID": "ApiTagDescription_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get Tag description in scope of API"
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}",
          "Method": "HEAD",
          "OperationID": "ApiTagDescription_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state version of the tag specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}",
          "Method": "PUT",
          "OperationID": "ApiTagDescription_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create/Update tag description in scope of the Api."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}",
          "Method": "PUT",
          "OperationID": "ApiTagDescription_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create/Update tag description in scope of the Api."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}",
          "Method": "DELETE",
          "OperationID": "ApiTagDescription_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Delete tag description for the Api."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions",
            "Method": "GET",
            "OperationID": "ApiTagDescription_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations"
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiContract"
        ],
        "SwaggerModelName": "TagDescriptionContract",
        "ResourceType": "Microsoft.ApiManagement/service/apis/tagDescriptions",
        "ResourceKey": "tagDescriptionId",
        "ResourceKeySegment": "tagDescriptions",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "ApiVersionSetContract": [
      {
        "Name": "ApiVersionSetContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}",
          "Method": "GET",
          "OperationID": "ApiVersionSet_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Api Version Set specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}",
          "Method": "HEAD",
          "OperationID": "ApiVersionSet_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}",
          "Method": "PUT",
          "OperationID": "ApiVersionSet_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a Api Version Set."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}",
          "Method": "PATCH",
          "OperationID": "ApiVersionSet_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the Api VersionSet specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}",
          "Method": "DELETE",
          "OperationID": "ApiVersionSet_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific Api Version Set."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets",
            "Method": "GET",
            "OperationID": "ApiVersionSet_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of API Version Sets in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "ApiVersionSetContract",
        "ResourceType": "Microsoft.ApiManagement/service/apiVersionSets",
        "ResourceKey": "versionSetId",
        "ResourceKeySegment": "apiVersionSets",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "AuthorizationServerContract": [
      {
        "Name": "AuthorizationServerContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}",
          "Method": "GET",
          "OperationID": "AuthorizationServer_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the authorization server specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}",
          "Method": "HEAD",
          "OperationID": "AuthorizationServer_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the authorizationServer specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}",
          "Method": "PUT",
          "OperationID": "AuthorizationServer_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates new authorization server or updates an existing authorization server."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}",
          "Method": "PATCH",
          "OperationID": "AuthorizationServer_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the authorization server specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}",
          "Method": "DELETE",
          "OperationID": "AuthorizationServer_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific authorization server instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers",
            "Method": "GET",
            "OperationID": "AuthorizationServer_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of authorization servers defined within a service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}/listSecrets",
            "Method": "POST",
            "OperationID": "AuthorizationServer_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the client secret details of the authorization server."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "AuthorizationServerContract",
        "ResourceType": "Microsoft.ApiManagement/service/authorizationServers",
        "ResourceKey": "authsid",
        "ResourceKeySegment": "authorizationServers",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "BackendContract": [
      {
        "Name": "BackendContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}",
          "Method": "GET",
          "OperationID": "Backend_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the backend specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}",
          "Method": "HEAD",
          "OperationID": "Backend_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the backend specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}",
          "Method": "PUT",
          "OperationID": "Backend_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a backend."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}",
          "Method": "PATCH",
          "OperationID": "Backend_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates an existing backend."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}",
          "Method": "DELETE",
          "OperationID": "Backend_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified backend."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends",
            "Method": "GET",
            "OperationID": "Backend_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of backends in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "Reconnect",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}/reconnect",
            "Method": "POST",
            "OperationID": "Backend_Reconnect",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "BackendContract",
        "ResourceType": "Microsoft.ApiManagement/service/backends",
        "ResourceKey": "backendId",
        "ResourceKeySegment": "backends",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "CacheContract": [
      {
        "Name": "CacheContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}",
          "Method": "GET",
          "OperationID": "Cache_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Cache specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}",
          "Method": "HEAD",
          "OperationID": "Cache_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Cache specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}",
          "Method": "PUT",
          "OperationID": "Cache_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates an External Cache to be used in Api Management instance."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}",
          "Method": "PATCH",
          "OperationID": "Cache_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the cache specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}",
          "Method": "DELETE",
          "OperationID": "Cache_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific Cache."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches",
            "Method": "GET",
            "OperationID": "Cache_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of all external Caches in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "CacheContract",
        "ResourceType": "Microsoft.ApiManagement/service/caches",
        "ResourceKey": "cacheId",
        "ResourceKeySegment": "caches",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "CertificateContract": [
      {
        "Name": "CertificateContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}",
          "Method": "GET",
          "OperationID": "Certificate_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the certificate specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}",
          "Method": "HEAD",
          "OperationID": "Certificate_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the certificate specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}",
          "Method": "PUT",
          "OperationID": "Certificate_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the certificate being used for authentication with the backend."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}",
          "Method": "PUT",
          "OperationID": "Certificate_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the certificate being used for authentication with the backend."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}",
          "Method": "DELETE",
          "OperationID": "Certificate_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific certificate."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates",
            "Method": "GET",
            "OperationID": "Certificate_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of all certificates in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "RefreshSecret",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}/refreshSecret",
            "Method": "POST",
            "OperationID": "Certificate_RefreshSecret",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "From KeyVault, Refresh the certificate being used for authentication with the backend."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "CertificateContract",
        "ResourceType": "Microsoft.ApiManagement/service/certificates",
        "ResourceKey": "certificateId",
        "ResourceKeySegment": "certificates",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "ContentTypeContract": [
      {
        "Name": "ContentTypeContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}",
          "Method": "GET",
          "OperationID": "ContentType_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}",
          "Method": "PUT",
          "OperationID": "ContentType_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}",
          "Method": "PUT",
          "OperationID": "ContentType_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}",
          "Method": "DELETE",
          "OperationID": "ContentType_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes",
            "Method": "GET",
            "OperationID": "ContentType_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "ContentTypeContract",
        "ResourceType": "Microsoft.ApiManagement/service/contentTypes",
        "ResourceKey": "contentTypeId",
        "ResourceKeySegment": "contentTypes",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "ContentItemContract": [
      {
        "Name": "ContentItemContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}",
          "Method": "GET",
          "OperationID": "ContentItem_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Returns the developer portal's content item specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}",
          "Method": "HEAD",
          "OperationID": "ContentItem_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Returns the entity state (ETag) version of the developer portal's content item specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}",
          "Method": "PUT",
          "OperationID": "ContentItem_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new developer portal's content item specified by the provided content type."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}",
          "Method": "PUT",
          "OperationID": "ContentItem_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new developer portal's content item specified by the provided content type."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}",
          "Method": "DELETE",
          "OperationID": "ContentItem_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Removes the specified developer portal's content item."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems",
            "Method": "GET",
            "OperationID": "ContentItem_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists developer portal's content items specified by the provided content type."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ContentTypeContract"
        ],
        "SwaggerModelName": "ContentItemContract",
        "ResourceType": "Microsoft.ApiManagement/service/contentTypes/contentItems",
        "ResourceKey": "contentItemId",
        "ResourceKeySegment": "contentItems",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "DeletedServiceContract": [
      {
        "Name": "DeletedServiceContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}",
          "Method": "GET",
          "OperationID": "DeletedServices_GetByName",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get soft-deleted Api Management Service by name."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}",
          "Method": "DELETE",
          "OperationID": "DeletedServices_Purge",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Purges Api Management Service (deletes it with no option to undelete)."
        },
        "ListOperations": [],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "SubscriptionResource"
        ],
        "SwaggerModelName": "DeletedServiceContract",
        "ResourceType": "Microsoft.ApiManagement/locations/deletedservices",
        "ResourceKey": "serviceName",
        "ResourceKeySegment": "deletedservices",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Subscription",
        "IsSingletonResource": false
      }
    ],
    "ApiManagementServiceResource": [
      {
        "Name": "ApiManagementServiceResource",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}",
          "Method": "GET",
          "OperationID": "ApiManagementService_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets an API Management service resource description."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}",
          "Method": "PUT",
          "OperationID": "ApiManagementService_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates an API Management service. This is long running operation and could take several minutes to complete."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}",
          "Method": "PATCH",
          "OperationID": "ApiManagementService_Update",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Updates an existing API Management service."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}",
          "Method": "DELETE",
          "OperationID": "ApiManagementService_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes an existing API Management service."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service",
            "Method": "GET",
            "OperationID": "ApiManagementService_ListByResourceGroup",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByResourceGroup",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "List all API Management services within a resource group."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [
          {
            "Name": "_",
            "Path": "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service",
            "Method": "GET",
            "OperationID": "ApiManagementService_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all API Management services within an Azure subscription."
          }
        ],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListByTags",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags",
            "Method": "GET",
            "OperationID": "Api_ListByTags",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByTags",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of apis associated with tags."
          },
          {
            "Name": "PerformConnectivityCheckAsync",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck",
            "Method": "POST",
            "OperationID": "PerformConnectivityCheckAsync",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it."
          },
          {
            "Name": "ListAvailableServiceSkus",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus",
            "Method": "GET",
            "OperationID": "ApiManagementServiceSkus_ListAvailableServiceSkus",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListAvailableServiceSkus",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets all available SKU for a given API Management service"
          },
          {
            "Name": "Restore",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore",
            "Method": "POST",
            "OperationID": "ApiManagementService_Restore",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete."
          },
          {
            "Name": "Backup",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup",
            "Method": "POST",
            "OperationID": "ApiManagementService_Backup",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete."
          },
          {
            "Name": "GetSsoToken",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken",
            "Method": "POST",
            "OperationID": "ApiManagementService_GetSsoToken",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes."
          },
          {
            "Name": "ApplyNetworkConfigurationUpdates",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates",
            "Method": "POST",
            "OperationID": "ApiManagementService_ApplyNetworkConfigurationUpdates",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus",
            "Method": "GET",
            "OperationID": "NetworkStatus_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService."
          },
          {
            "Name": "ListByLocation",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus",
            "Method": "GET",
            "OperationID": "NetworkStatus_ListByLocation",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints",
            "Method": "GET",
            "OperationID": "OutboundNetworkDependenciesEndpoints_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Gets the network endpoints of all outbound dependencies of a ApiManagement service."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions",
            "Method": "GET",
            "OperationID": "PolicyDescription_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists all policy descriptions."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings",
            "Method": "GET",
            "OperationID": "PortalSettings_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists a collection of portalsettings defined within a service instance.."
          },
          {
            "Name": "ListByTags",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags",
            "Method": "GET",
            "OperationID": "Product_ListByTags",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByTags",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of products associated with tags."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}",
            "Method": "GET",
            "OperationID": "QuotaByCounterKeys_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet."
          },
          {
            "Name": "Update",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}",
            "Method": "PATCH",
            "OperationID": "QuotaByCounterKeys_Update",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "Update",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values."
          },
          {
            "Name": "Get",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}",
            "Method": "GET",
            "OperationID": "QuotaByPeriodKeys_Get",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance."
          },
          {
            "Name": "Update",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}",
            "Method": "PATCH",
            "OperationID": "QuotaByPeriodKeys_Update",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Updates an existing quota counter value in the specified service instance."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions",
            "Method": "GET",
            "OperationID": "Region_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all azure regions in which the service exists."
          },
          {
            "Name": "ListByApi",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi",
            "Method": "GET",
            "OperationID": "Reports_ListByApi",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByApi",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by API."
          },
          {
            "Name": "ListByUser",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser",
            "Method": "GET",
            "OperationID": "Reports_ListByUser",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByUser",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by User."
          },
          {
            "Name": "ListByOperation",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation",
            "Method": "GET",
            "OperationID": "Reports_ListByOperation",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByOperation",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by API Operations."
          },
          {
            "Name": "ListByProduct",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct",
            "Method": "GET",
            "OperationID": "Reports_ListByProduct",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByProduct",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by Product."
          },
          {
            "Name": "ListByGeo",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo",
            "Method": "GET",
            "OperationID": "Reports_ListByGeo",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByGeo",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by geography."
          },
          {
            "Name": "ListBySubscription",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription",
            "Method": "GET",
            "OperationID": "Reports_ListBySubscription",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListBySubscription",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by subscription."
          },
          {
            "Name": "ListByTime",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime",
            "Method": "GET",
            "OperationID": "Reports_ListByTime",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByTime",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists report records by Time."
          },
          {
            "Name": "ListByRequest",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest",
            "Method": "GET",
            "OperationID": "Reports_ListByRequest",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByRequest",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists report records by Request."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources",
            "Method": "GET",
            "OperationID": "TagResource_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of resources associated with tags."
          }
        ],
        "Parents": [
          "ResourceGroupResource"
        ],
        "SwaggerModelName": "ApiManagementServiceResource",
        "ResourceType": "Microsoft.ApiManagement/service",
        "ResourceKey": "serviceName",
        "ResourceKeySegment": "service",
        "IsTrackedResource": true,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "EmailTemplateContract": [
      {
        "Name": "EmailTemplateContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}",
          "Method": "GET",
          "OperationID": "EmailTemplate_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the email template specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}",
          "Method": "HEAD",
          "OperationID": "EmailTemplate_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the email template specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}",
          "Method": "PUT",
          "OperationID": "EmailTemplate_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Updates an Email Template."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}",
          "Method": "PATCH",
          "OperationID": "EmailTemplate_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates API Management email template"
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}",
          "Method": "DELETE",
          "OperationID": "EmailTemplate_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Reset the Email Template to default template provided by the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates",
            "Method": "GET",
            "OperationID": "EmailTemplate_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets all email templates"
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "EmailTemplateContract",
        "ResourceType": "Microsoft.ApiManagement/service/templates",
        "ResourceKey": "templateName",
        "ResourceKeySegment": "templates",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "GatewayContract": [
      {
        "Name": "GatewayContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}",
          "Method": "GET",
          "OperationID": "Gateway_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Gateway specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}",
          "Method": "HEAD",
          "OperationID": "Gateway_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Gateway specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}",
          "Method": "PUT",
          "OperationID": "Gateway_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates a Gateway to be used in Api Management instance."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}",
          "Method": "PATCH",
          "OperationID": "Gateway_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the gateway specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}",
          "Method": "DELETE",
          "OperationID": "Gateway_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific Gateway."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways",
            "Method": "GET",
            "OperationID": "Gateway_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of gateways registered with service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListKeys",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys",
            "Method": "POST",
            "OperationID": "Gateway_ListKeys",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Retrieves gateway keys."
          },
          {
            "Name": "RegenerateKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey",
            "Method": "POST",
            "OperationID": "Gateway_RegenerateKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerates specified gateway key invalidating any tokens created with it."
          },
          {
            "Name": "GenerateToken",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken",
            "Method": "POST",
            "OperationID": "Gateway_GenerateToken",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the Shared Access Authorization Token for the gateway."
          },
          {
            "Name": "ListByService",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis",
            "Method": "GET",
            "OperationID": "GatewayApi_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of the APIs associated with a gateway."
          },
          {
            "Name": "GetEntityTag",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}",
            "Method": "HEAD",
            "OperationID": "GatewayApi_GetEntityTag",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Checks that API entity specified by identifier is associated with the Gateway entity."
          },
          {
            "Name": "CreateOrUpdate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}",
            "Method": "PUT",
            "OperationID": "GatewayApi_CreateOrUpdate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Adds an API to the specified Gateway."
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}",
            "Method": "DELETE",
            "OperationID": "GatewayApi_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Deletes the specified API from the specified Gateway."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "GatewayContract",
        "ResourceType": "Microsoft.ApiManagement/service/gateways",
        "ResourceKey": "gatewayId",
        "ResourceKeySegment": "gateways",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "GatewayHostnameConfigurationContract": [
      {
        "Name": "GatewayHostnameConfigurationContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}",
          "Method": "GET",
          "OperationID": "GatewayHostnameConfiguration_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get details of a hostname configuration"
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}",
          "Method": "HEAD",
          "OperationID": "GatewayHostnameConfiguration_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Checks that hostname configuration entity specified by identifier exists for specified Gateway entity."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}",
          "Method": "PUT",
          "OperationID": "GatewayHostnameConfiguration_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates of updates hostname configuration for a Gateway."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}",
          "Method": "PUT",
          "OperationID": "GatewayHostnameConfiguration_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates of updates hostname configuration for a Gateway."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}",
          "Method": "DELETE",
          "OperationID": "GatewayHostnameConfiguration_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified hostname configuration from the specified Gateway."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations",
            "Method": "GET",
            "OperationID": "GatewayHostnameConfiguration_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the collection of hostname configurations for the specified gateway."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "GatewayContract"
        ],
        "SwaggerModelName": "GatewayHostnameConfigurationContract",
        "ResourceType": "Microsoft.ApiManagement/service/gateways/hostnameConfigurations",
        "ResourceKey": "hcId",
        "ResourceKeySegment": "hostnameConfigurations",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "GatewayCertificateAuthorityContract": [
      {
        "Name": "GatewayCertificateAuthorityContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}",
          "Method": "GET",
          "OperationID": "GatewayCertificateAuthority_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get assigned Gateway Certificate Authority details."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}",
          "Method": "HEAD",
          "OperationID": "GatewayCertificateAuthority_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Checks if Certificate entity is assigned to Gateway entity as Certificate Authority."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}",
          "Method": "PUT",
          "OperationID": "GatewayCertificateAuthority_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign Certificate entity to Gateway entity as Certificate Authority."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}",
          "Method": "PUT",
          "OperationID": "GatewayCertificateAuthority_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Assign Certificate entity to Gateway entity as Certificate Authority."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}",
          "Method": "DELETE",
          "OperationID": "GatewayCertificateAuthority_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Remove relationship between Certificate Authority and Gateway entity."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities",
            "Method": "GET",
            "OperationID": "GatewayCertificateAuthority_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the collection of Certificate Authorities for the specified Gateway entity."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "GatewayContract"
        ],
        "SwaggerModelName": "GatewayCertificateAuthorityContract",
        "ResourceType": "Microsoft.ApiManagement/service/gateways/certificateAuthorities",
        "ResourceKey": "certificateId",
        "ResourceKeySegment": "certificateAuthorities",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "GroupContract": [
      {
        "Name": "GroupContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}",
          "Method": "GET",
          "OperationID": "Group_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the group specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}",
          "Method": "HEAD",
          "OperationID": "Group_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the group specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}",
          "Method": "PUT",
          "OperationID": "Group_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a group."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}",
          "Method": "PATCH",
          "OperationID": "Group_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the group specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}",
          "Method": "DELETE",
          "OperationID": "Group_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific group of the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups",
            "Method": "GET",
            "OperationID": "Group_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of groups defined within a service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "List",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users",
            "Method": "GET",
            "OperationID": "GroupUser_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of user entities associated with the group."
          },
          {
            "Name": "CheckEntityExists",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
            "Method": "HEAD",
            "OperationID": "GroupUser_CheckEntityExists",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Checks that user entity specified by identifier is associated with the group entity."
          },
          {
            "Name": "Create",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
            "Method": "PUT",
            "OperationID": "GroupUser_Create",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Add existing user to existing group"
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
            "Method": "DELETE",
            "OperationID": "GroupUser_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Remove existing user from existing group."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "GroupContract",
        "ResourceType": "Microsoft.ApiManagement/service/groups",
        "ResourceKey": "groupId",
        "ResourceKeySegment": "groups",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "IdentityProviderContract": [
      {
        "Name": "IdentityProviderContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}",
          "Method": "GET",
          "OperationID": "IdentityProvider_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the configuration details of the identity Provider configured in specified service instance."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}",
          "Method": "HEAD",
          "OperationID": "IdentityProvider_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the identityProvider specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}",
          "Method": "PUT",
          "OperationID": "IdentityProvider_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates the IdentityProvider configuration."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}",
          "Method": "PATCH",
          "OperationID": "IdentityProvider_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates an existing IdentityProvider configuration."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}",
          "Method": "DELETE",
          "OperationID": "IdentityProvider_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified identity provider configuration."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders",
            "Method": "GET",
            "OperationID": "IdentityProvider_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of Identity Provider configured in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}/listSecrets",
            "Method": "POST",
            "OperationID": "IdentityProvider_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the client secret details of the Identity Provider."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "IdentityProviderContract",
        "ResourceType": "Microsoft.ApiManagement/service/identityProviders",
        "ResourceKey": "identityProviderName",
        "ResourceKeySegment": "identityProviders",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "LoggerContract": [
      {
        "Name": "LoggerContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}",
          "Method": "GET",
          "OperationID": "Logger_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the logger specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}",
          "Method": "HEAD",
          "OperationID": "Logger_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the logger specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}",
          "Method": "PUT",
          "OperationID": "Logger_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a logger."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}",
          "Method": "PATCH",
          "OperationID": "Logger_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates an existing logger."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}",
          "Method": "DELETE",
          "OperationID": "Logger_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified logger."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers",
            "Method": "GET",
            "OperationID": "Logger_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of loggers in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "LoggerContract",
        "ResourceType": "Microsoft.ApiManagement/service/loggers",
        "ResourceKey": "loggerId",
        "ResourceKeySegment": "loggers",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "NamedValueContract": [
      {
        "Name": "NamedValueContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}",
          "Method": "GET",
          "OperationID": "NamedValue_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the named value specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}",
          "Method": "HEAD",
          "OperationID": "NamedValue_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the named value specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}",
          "Method": "PUT",
          "OperationID": "NamedValue_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates named value."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}",
          "Method": "PATCH",
          "OperationID": "NamedValue_Update",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Updates the specific named value."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}",
          "Method": "DELETE",
          "OperationID": "NamedValue_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific named value from the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues",
            "Method": "GET",
            "OperationID": "NamedValue_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of named values defined within a service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListValue",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/listValue",
            "Method": "POST",
            "OperationID": "NamedValue_ListValue",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the secret of the named value specified by its identifier."
          },
          {
            "Name": "RefreshSecret",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/refreshSecret",
            "Method": "POST",
            "OperationID": "NamedValue_RefreshSecret",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Refresh the secret of the named value specified by its identifier."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "NamedValueContract",
        "ResourceType": "Microsoft.ApiManagement/service/namedValues",
        "ResourceKey": "namedValueId",
        "ResourceKeySegment": "namedValues",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "NotificationContract": [
      {
        "Name": "NotificationContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}",
          "Method": "GET",
          "OperationID": "Notification_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Notification specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}",
          "Method": "PUT",
          "OperationID": "Notification_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or Update API Management publisher notification."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}",
          "Method": "PUT",
          "OperationID": "Notification_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or Update API Management publisher notification."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications",
            "Method": "GET",
            "OperationID": "Notification_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of properties defined within a service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListByNotification",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers",
            "Method": "GET",
            "OperationID": "NotificationRecipientUser_ListByNotification",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByNotification",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Gets the list of the Notification Recipient User subscribed to the notification."
          },
          {
            "Name": "CheckEntityExists",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}",
            "Method": "HEAD",
            "OperationID": "NotificationRecipientUser_CheckEntityExists",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Determine if the Notification Recipient User is subscribed to the notification."
          },
          {
            "Name": "CreateOrUpdate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}",
            "Method": "PUT",
            "OperationID": "NotificationRecipientUser_CreateOrUpdate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Adds the API Management User to the list of Recipients for the Notification."
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}",
            "Method": "DELETE",
            "OperationID": "NotificationRecipientUser_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Removes the API Management user from the list of Notification."
          },
          {
            "Name": "ListByNotification",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails",
            "Method": "GET",
            "OperationID": "NotificationRecipientEmail_ListByNotification",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByNotification",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Gets the list of the Notification Recipient Emails subscribed to a notification."
          },
          {
            "Name": "CheckEntityExists",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}",
            "Method": "HEAD",
            "OperationID": "NotificationRecipientEmail_CheckEntityExists",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Determine if Notification Recipient Email subscribed to the notification."
          },
          {
            "Name": "CreateOrUpdate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}",
            "Method": "PUT",
            "OperationID": "NotificationRecipientEmail_CreateOrUpdate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Adds the Email address to the list of Recipients for the Notification."
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}",
            "Method": "DELETE",
            "OperationID": "NotificationRecipientEmail_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Removes the email from the list of Notification."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "NotificationContract",
        "ResourceType": "Microsoft.ApiManagement/service/notifications",
        "ResourceKey": "notificationName",
        "ResourceKeySegment": "notifications",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "OpenidConnectProviderContract": [
      {
        "Name": "OpenidConnectProviderContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}",
          "Method": "GET",
          "OperationID": "OpenIdConnectProvider_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets specific OpenID Connect Provider without secrets."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}",
          "Method": "HEAD",
          "OperationID": "OpenIdConnectProvider_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the openIdConnectProvider specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}",
          "Method": "PUT",
          "OperationID": "OpenIdConnectProvider_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the OpenID Connect Provider."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}",
          "Method": "PATCH",
          "OperationID": "OpenIdConnectProvider_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the specific OpenID Connect Provider."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}",
          "Method": "DELETE",
          "OperationID": "OpenIdConnectProvider_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific OpenID Connect Provider of the API Management service instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders",
            "Method": "GET",
            "OperationID": "OpenIdConnectProvider_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists of all the OpenId Connect Providers."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}/listSecrets",
            "Method": "POST",
            "OperationID": "OpenIdConnectProvider_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the client secret details of the OpenID Connect Provider."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "OpenidConnectProviderContract",
        "ResourceType": "Microsoft.ApiManagement/service/openidConnectProviders",
        "ResourceKey": "opid",
        "ResourceKeySegment": "openidConnectProviders",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "PortalRevisionContract": [
      {
        "Name": "PortalRevisionContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}",
          "Method": "GET",
          "OperationID": "PortalRevision_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the developer portal's revision specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}",
          "Method": "HEAD",
          "OperationID": "PortalRevision_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the developer portal revision specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}",
          "Method": "PUT",
          "OperationID": "PortalRevision_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new developer portal's revision by running the portal's publishing. The `isCurrent` property indicates if the revision is publicly accessible."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}",
          "Method": "PATCH",
          "OperationID": "PortalRevision_Update",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Updates the description of specified portal revision or makes it current."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions",
            "Method": "GET",
            "OperationID": "PortalRevision_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists developer portal's revisions."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PortalRevisionContract",
        "ResourceType": "Microsoft.ApiManagement/service/portalRevisions",
        "ResourceKey": "portalRevisionId",
        "ResourceKeySegment": "portalRevisions",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "PortalSigninSettings": [
      {
        "Name": "PortalSigninSetting",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin",
          "Method": "GET",
          "OperationID": "SignInSettings_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get Sign In Settings for the Portal"
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin",
          "Method": "HEAD",
          "OperationID": "SignInSettings_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the SignInSettings."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin",
          "Method": "PUT",
          "OperationID": "SignInSettings_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or Update Sign-In settings."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin",
          "Method": "PATCH",
          "OperationID": "SignInSettings_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update Sign-In settings."
        },
        "ListOperations": [],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PortalSigninSettings",
        "ResourceType": "Microsoft.ApiManagement/service/portalsettings",
        "ResourceKey": "signin",
        "ResourceKeySegment": "portalsettings",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": true
      }
    ],
    "PortalSignupSettings": [
      {
        "Name": "PortalSignupSetting",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup",
          "Method": "GET",
          "OperationID": "SignUpSettings_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get Sign Up Settings for the Portal"
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup",
          "Method": "HEAD",
          "OperationID": "SignUpSettings_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the SignUpSettings."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup",
          "Method": "PUT",
          "OperationID": "SignUpSettings_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or Update Sign-Up settings."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup",
          "Method": "PATCH",
          "OperationID": "SignUpSettings_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update Sign-Up settings."
        },
        "ListOperations": [],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PortalSignupSettings",
        "ResourceType": "Microsoft.ApiManagement/service/portalsettings",
        "ResourceKey": "signup",
        "ResourceKeySegment": "portalsettings",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": true
      }
    ],
    "PortalDelegationSettings": [
      {
        "Name": "PortalDelegationSetting",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation",
          "Method": "GET",
          "OperationID": "DelegationSettings_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get Delegation Settings for the Portal."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation",
          "Method": "HEAD",
          "OperationID": "DelegationSettings_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the DelegationSettings."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation",
          "Method": "PUT",
          "OperationID": "DelegationSettings_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or Update Delegation settings."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation",
          "Method": "PATCH",
          "OperationID": "DelegationSettings_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update Delegation settings."
        },
        "ListOperations": [],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation/listSecrets",
            "Method": "POST",
            "OperationID": "DelegationSettings_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the secret validation key of the DelegationSettings."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PortalDelegationSettings",
        "ResourceType": "Microsoft.ApiManagement/service/portalsettings",
        "ResourceKey": "delegation",
        "ResourceKeySegment": "portalsettings",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": true
      }
    ],
    "PrivateEndpointConnection": [
      {
        "Name": "PrivateEndpointConnection",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}",
          "Method": "GET",
          "OperationID": "PrivateEndpointConnection_GetByName",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Private Endpoint Connection specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}",
          "Method": "PUT",
          "OperationID": "PrivateEndpointConnection_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Private Endpoint Connection or updates an existing one."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}",
          "Method": "PUT",
          "OperationID": "PrivateEndpointConnection_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a new Private Endpoint Connection or updates an existing one."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}",
          "Method": "DELETE",
          "OperationID": "PrivateEndpointConnection_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified Private Endpoint Connection."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections",
            "Method": "GET",
            "OperationID": "PrivateEndpointConnection_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Lists all private endpoint connections of the API Management service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PrivateEndpointConnection",
        "ResourceType": "Microsoft.ApiManagement/service/privateEndpointConnections",
        "ResourceKey": "privateEndpointConnectionName",
        "ResourceKeySegment": "privateEndpointConnections",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "PrivateLinkResource": [
      {
        "Name": "PrivateLinkResource",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}",
          "Method": "GET",
          "OperationID": "PrivateEndpointConnection_GetPrivateLinkResource",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the private link resources"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources",
            "Method": "GET",
            "OperationID": "PrivateEndpointConnection_ListPrivateLinkResources",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListPrivateLinkResources",
              "ItemName": "value",
              "NextLinkName": null
            },
            "Description": "Gets the private link resources"
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "PrivateLinkResource",
        "ResourceType": "Microsoft.ApiManagement/service/privateLinkResources",
        "ResourceKey": "privateLinkSubResourceName",
        "ResourceKeySegment": "privateLinkResources",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "ProductContract": [
      {
        "Name": "ProductContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}",
          "Method": "GET",
          "OperationID": "Product_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the product specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}",
          "Method": "HEAD",
          "OperationID": "Product_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the product specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}",
          "Method": "PUT",
          "OperationID": "Product_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a product."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}",
          "Method": "PATCH",
          "OperationID": "Product_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update existing product details."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}",
          "Method": "DELETE",
          "OperationID": "Product_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Delete product."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products",
            "Method": "GET",
            "OperationID": "Product_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of products in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "ListByProduct",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis",
            "Method": "GET",
            "OperationID": "ProductApi_ListByProduct",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByProduct",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of the APIs associated with a product."
          },
          {
            "Name": "CheckEntityExists",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}",
            "Method": "HEAD",
            "OperationID": "ProductApi_CheckEntityExists",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Checks that API entity specified by identifier is associated with the Product entity."
          },
          {
            "Name": "CreateOrUpdate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}",
            "Method": "PUT",
            "OperationID": "ProductApi_CreateOrUpdate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Adds an API to the specified product."
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}",
            "Method": "DELETE",
            "OperationID": "ProductApi_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Deletes the specified API from the specified product."
          },
          {
            "Name": "ListByProduct",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups",
            "Method": "GET",
            "OperationID": "ProductGroup_ListByProduct",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByProduct",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the collection of developer groups associated with the specified product."
          },
          {
            "Name": "CheckEntityExists",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}",
            "Method": "HEAD",
            "OperationID": "ProductGroup_CheckEntityExists",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Checks that Group entity specified by identifier is associated with the Product entity."
          },
          {
            "Name": "CreateOrUpdate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}",
            "Method": "PUT",
            "OperationID": "ProductGroup_CreateOrUpdate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Adds the association between the specified developer group with the specified product."
          },
          {
            "Name": "Delete",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}",
            "Method": "DELETE",
            "OperationID": "ProductGroup_Delete",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "Deletes the association between the specified group and product."
          },
          {
            "Name": "List",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions",
            "Method": "GET",
            "OperationID": "ProductSubscriptions_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the collection of subscriptions to the specified product."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "ProductContract",
        "ResourceType": "Microsoft.ApiManagement/service/products",
        "ResourceKey": "productId",
        "ResourceKeySegment": "products",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "GlobalSchemaContract": [
      {
        "Name": "GlobalSchemaContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}",
          "Method": "GET",
          "OperationID": "GlobalSchema_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the Schema specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}",
          "Method": "HEAD",
          "OperationID": "GlobalSchema_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the Schema specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}",
          "Method": "PUT",
          "OperationID": "GlobalSchema_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates new or updates existing specified Schema of the API Management service instance."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}",
          "Method": "PUT",
          "OperationID": "GlobalSchema_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates new or updates existing specified Schema of the API Management service instance."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}",
          "Method": "DELETE",
          "OperationID": "GlobalSchema_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific Schema."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas",
            "Method": "GET",
            "OperationID": "GlobalSchema_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of schemas registered with service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "GlobalSchemaContract",
        "ResourceType": "Microsoft.ApiManagement/service/schemas",
        "ResourceKey": "schemaId",
        "ResourceKeySegment": "schemas",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "TenantSettingsContract": [
      {
        "Name": "TenantSettingsContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}",
          "Method": "GET",
          "OperationID": "TenantSettings_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get tenant settings."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings",
            "Method": "GET",
            "OperationID": "TenantSettings_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Public settings."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "TenantSettingsContract",
        "ResourceType": "Microsoft.ApiManagement/service/settings",
        "ResourceKey": "settingsType",
        "ResourceKeySegment": "settings",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "SubscriptionContract": [
      {
        "Name": "SubscriptionContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
          "Method": "GET",
          "OperationID": "Subscription_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the specified Subscription entity."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
          "Method": "HEAD",
          "OperationID": "Subscription_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
          "Method": "PUT",
          "OperationID": "Subscription_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates the subscription of specified user to the specified product."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
          "Method": "PATCH",
          "OperationID": "Subscription_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of a subscription specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
          "Method": "DELETE",
          "OperationID": "Subscription_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes the specified subscription."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions",
            "Method": "GET",
            "OperationID": "Subscription_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all subscriptions of the API Management service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "RegeneratePrimaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey",
            "Method": "POST",
            "OperationID": "Subscription_RegeneratePrimaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerates primary key of existing subscription of the API Management service instance."
          },
          {
            "Name": "RegenerateSecondaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey",
            "Method": "POST",
            "OperationID": "Subscription_RegenerateSecondaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerates secondary key of existing subscription of the API Management service instance."
          },
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/listSecrets",
            "Method": "POST",
            "OperationID": "Subscription_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the specified Subscription keys."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "SubscriptionContract",
        "ResourceType": "Microsoft.ApiManagement/service/subscriptions",
        "ResourceKey": "sid",
        "ResourceKeySegment": "subscriptions",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      },
      {
        "Name": "SubscriptionContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions/{sid}",
          "Method": "GET",
          "OperationID": "UserSubscription_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the specified Subscription entity associated with a particular user."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions",
            "Method": "GET",
            "OperationID": "UserSubscription_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists the collection of subscriptions of the specified user."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "UserContract"
        ],
        "SwaggerModelName": "SubscriptionContract",
        "ResourceType": "Microsoft.ApiManagement/service/users/subscriptions",
        "ResourceKey": "sid",
        "ResourceKeySegment": "subscriptions",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "AccessInformationContract": [
      {
        "Name": "AccessInformationContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}",
          "Method": "GET",
          "OperationID": "TenantAccess_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get tenant access information details without secrets."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}",
          "Method": "HEAD",
          "OperationID": "TenantAccess_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Tenant access metadata"
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}",
          "Method": "PUT",
          "OperationID": "TenantAccess_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Update tenant access information details."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}",
          "Method": "PATCH",
          "OperationID": "TenantAccess_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update tenant access information details."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant",
            "Method": "GET",
            "OperationID": "TenantAccess_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Returns list of access infos - for Git and Management endpoints."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "RegeneratePrimaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regeneratePrimaryKey",
            "Method": "POST",
            "OperationID": "TenantAccess_RegeneratePrimaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerate primary access key"
          },
          {
            "Name": "RegenerateSecondaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regenerateSecondaryKey",
            "Method": "POST",
            "OperationID": "TenantAccess_RegenerateSecondaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerate secondary access key"
          },
          {
            "Name": "ListSecrets",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/listSecrets",
            "Method": "POST",
            "OperationID": "TenantAccess_ListSecrets",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Get tenant access information details."
          },
          {
            "Name": "RegeneratePrimaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regeneratePrimaryKey",
            "Method": "POST",
            "OperationID": "TenantAccessGit_RegeneratePrimaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerate primary access key for GIT."
          },
          {
            "Name": "RegenerateSecondaryKey",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regenerateSecondaryKey",
            "Method": "POST",
            "OperationID": "TenantAccessGit_RegenerateSecondaryKey",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Regenerate secondary access key for GIT."
          },
          {
            "Name": "Deploy",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy",
            "Method": "POST",
            "OperationID": "TenantConfiguration_Deploy",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete."
          },
          {
            "Name": "Save",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save",
            "Method": "POST",
            "OperationID": "TenantConfiguration_Save",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete."
          },
          {
            "Name": "Validate",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate",
            "Method": "POST",
            "OperationID": "TenantConfiguration_Validate",
            "IsLongRunning": true,
            "PagingMetadata": null,
            "Description": "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete."
          },
          {
            "Name": "GetSyncState",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState",
            "Method": "GET",
            "OperationID": "TenantConfiguration_GetSyncState",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the status of the most recent synchronization between the configuration database and the Git repository."
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "AccessInformationContract",
        "ResourceType": "Microsoft.ApiManagement/service/tenant",
        "ResourceKey": "accessName",
        "ResourceKeySegment": "tenant",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ],
    "UserContract": [
      {
        "Name": "UserContract",
        "GetOperation": {
          "Name": "Get",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}",
          "Method": "GET",
          "OperationID": "User_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the details of the user specified by its identifier."
        },
        "ExistOperation": {
          "Name": "CheckExistence",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}",
          "Method": "HEAD",
          "OperationID": "User_GetEntityTag",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the entity state (Etag) version of the user specified by its identifier."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}",
          "Method": "PUT",
          "OperationID": "User_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or Updates a user."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}",
          "Method": "PATCH",
          "OperationID": "User_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Updates the details of the user specified by its identifier."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}",
          "Method": "DELETE",
          "OperationID": "User_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes specific user."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users",
            "Method": "GET",
            "OperationID": "User_ListByService",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListByService",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists a collection of registered users in the specified service instance."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "GenerateSsoUrl",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/generateSsoUrl",
            "Method": "POST",
            "OperationID": "User_GenerateSsoUrl",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
          },
          {
            "Name": "GetSharedAccessToken",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/token",
            "Method": "POST",
            "OperationID": "User_GetSharedAccessToken",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Gets the Shared Access Authorization Token for the User."
          },
          {
            "Name": "List",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/groups",
            "Method": "GET",
            "OperationID": "UserGroup_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Lists all user groups."
          },
          {
            "Name": "List",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/identities",
            "Method": "GET",
            "OperationID": "UserIdentities_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "List of all user identities."
          },
          {
            "Name": "Send",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/confirmations/password/send",
            "Method": "POST",
            "OperationID": "UserConfirmationPassword_Send",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Sends confirmation"
          }
        ],
        "Parents": [
          "ApiManagementServiceResource"
        ],
        "SwaggerModelName": "UserContract",
        "ResourceType": "Microsoft.ApiManagement/service/users",
        "ResourceKey": "userId",
        "ResourceKeySegment": "users",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "ResourceGroup",
        "IsSingletonResource": false
      }
    ]
  },
  "RenameMapping": {},
  "OverrideOperationName": {}
}