{
  "Resources": {
    "DenyAssignment": [
      {
        "Name": "DenyAssignment",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}",
          "Method": "GET",
          "OperationID": "DenyAssignments_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified deny assignment."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/denyAssignments",
            "Method": "GET",
            "OperationID": "DenyAssignments_ListForResource",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForResource",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets deny assignments for a resource."
          },
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/denyAssignments",
            "Method": "GET",
            "OperationID": "DenyAssignments_ListForResourceGroup",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForResourceGroup",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets deny assignments for a resource group."
          },
          {
            "Name": "GetAll",
            "Path": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/denyAssignments",
            "Method": "GET",
            "OperationID": "DenyAssignments_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets all deny assignments for the subscription."
          },
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/denyAssignments",
            "Method": "GET",
            "OperationID": "DenyAssignments_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets deny assignments for a scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "DenyAssignment",
        "ResourceType": "Microsoft.Authorization/denyAssignments",
        "ResourceKey": "denyAssignmentId",
        "ResourceKeySegment": "denyAssignments",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "ProviderOperationsMetadata": [
      {
        "Name": "ProviderOperationsMetadatum",
        "GetOperation": {
          "Name": "Get",
          "Path": "/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}",
          "Method": "GET",
          "OperationID": "ProviderOperationsMetadata_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets provider operations metadata for the specified resource provider."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/providers/Microsoft.Authorization/providerOperations",
            "Method": "GET",
            "OperationID": "ProviderOperationsMetadata_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets provider operations metadata for all resource providers."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "TenantResource"
        ],
        "SwaggerModelName": "ProviderOperationsMetadata",
        "ResourceType": "Microsoft.Authorization/providerOperations",
        "ResourceKey": "resourceProviderNamespace",
        "ResourceKeySegment": "providerOperations",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Tenant",
        "IsSingletonResource": false
      }
    ],
    "RoleAssignment": [
      {
        "Name": "RoleAssignment",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}",
          "Method": "GET",
          "OperationID": "RoleAssignments_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get a role assignment by scope and name."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}",
          "Method": "PUT",
          "OperationID": "RoleAssignments_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or update a role assignment by scope and name."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}",
          "Method": "PUT",
          "OperationID": "RoleAssignments_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create or update a role assignment by scope and name."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}",
          "Method": "DELETE",
          "OperationID": "RoleAssignments_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Delete a role assignment by scope and name."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignments",
            "Method": "GET",
            "OperationID": "RoleAssignments_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "List all role assignments that apply to a scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleAssignment",
        "ResourceType": "Microsoft.Authorization/roleAssignments",
        "ResourceKey": "roleAssignmentName",
        "ResourceKeySegment": "roleAssignments",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleDefinition": [
      {
        "Name": "RoleDefinition",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
          "Method": "GET",
          "OperationID": "RoleDefinitions_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get role definition by name (GUID)."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
          "Method": "PUT",
          "OperationID": "RoleDefinitions_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates a role definition."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
          "Method": "PUT",
          "OperationID": "RoleDefinitions_CreateOrUpdate",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates or updates a role definition."
        },
        "DeleteOperation": {
          "Name": "Delete",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
          "Method": "DELETE",
          "OperationID": "RoleDefinitions_Delete",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Deletes a role definition."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleDefinitions",
            "Method": "GET",
            "OperationID": "RoleDefinitions_List",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "List",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Get all role definitions that are applicable at scope and above."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleDefinition",
        "ResourceType": "Microsoft.Authorization/roleDefinitions",
        "ResourceKey": "roleDefinitionId",
        "ResourceKeySegment": "roleDefinitions",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleAssignmentSchedule": [
      {
        "Name": "RoleAssignmentSchedule",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}",
          "Method": "GET",
          "OperationID": "RoleAssignmentSchedules_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role assignment schedule for a resource scope"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules",
            "Method": "GET",
            "OperationID": "RoleAssignmentSchedules_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role assignment schedules for a resource scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleAssignmentSchedule",
        "ResourceType": "Microsoft.Authorization/roleAssignmentSchedules",
        "ResourceKey": "roleAssignmentScheduleName",
        "ResourceKeySegment": "roleAssignmentSchedules",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleAssignmentScheduleInstance": [
      {
        "Name": "RoleAssignmentScheduleInstance",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}",
          "Method": "GET",
          "OperationID": "RoleAssignmentScheduleInstances_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the specified role assignment schedule instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances",
            "Method": "GET",
            "OperationID": "RoleAssignmentScheduleInstances_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role assignment schedule instances of a role assignment schedule."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleAssignmentScheduleInstance",
        "ResourceType": "Microsoft.Authorization/roleAssignmentScheduleInstances",
        "ResourceKey": "roleAssignmentScheduleInstanceName",
        "ResourceKeySegment": "roleAssignmentScheduleInstances",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleAssignmentScheduleRequest": [
      {
        "Name": "RoleAssignmentScheduleRequest",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}",
          "Method": "GET",
          "OperationID": "RoleAssignmentScheduleRequests_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role assignment schedule request."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}",
          "Method": "PUT",
          "OperationID": "RoleAssignmentScheduleRequests_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a role assignment schedule request."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}",
          "Method": "PUT",
          "OperationID": "RoleAssignmentScheduleRequests_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a role assignment schedule request."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests",
            "Method": "GET",
            "OperationID": "RoleAssignmentScheduleRequests_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role assignment schedule requests for a scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "Cancel",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/cancel",
            "Method": "POST",
            "OperationID": "RoleAssignmentScheduleRequests_Cancel",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Cancels a pending role assignment schedule request."
          },
          {
            "Name": "Validate",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/validate",
            "Method": "POST",
            "OperationID": "RoleAssignmentScheduleRequests_Validate",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Validates a new role assignment schedule request."
          }
        ],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleAssignmentScheduleRequest",
        "ResourceType": "Microsoft.Authorization/roleAssignmentScheduleRequests",
        "ResourceKey": "roleAssignmentScheduleRequestName",
        "ResourceKeySegment": "roleAssignmentScheduleRequests",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleEligibilitySchedule": [
      {
        "Name": "RoleEligibilitySchedule",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}",
          "Method": "GET",
          "OperationID": "RoleEligibilitySchedules_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role eligibility schedule for a resource scope"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules",
            "Method": "GET",
            "OperationID": "RoleEligibilitySchedules_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role eligibility schedules for a resource scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleEligibilitySchedule",
        "ResourceType": "Microsoft.Authorization/roleEligibilitySchedules",
        "ResourceKey": "roleEligibilityScheduleName",
        "ResourceKeySegment": "roleEligibilitySchedules",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleEligibilityScheduleInstance": [
      {
        "Name": "RoleEligibilityScheduleInstance",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}",
          "Method": "GET",
          "OperationID": "RoleEligibilityScheduleInstances_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Gets the specified role eligibility schedule instance."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances",
            "Method": "GET",
            "OperationID": "RoleEligibilityScheduleInstances_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role eligibility schedule instances of a role eligibility schedule."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleEligibilityScheduleInstance",
        "ResourceType": "Microsoft.Authorization/roleEligibilityScheduleInstances",
        "ResourceKey": "roleEligibilityScheduleInstanceName",
        "ResourceKeySegment": "roleEligibilityScheduleInstances",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleEligibilityScheduleRequest": [
      {
        "Name": "RoleEligibilityScheduleRequest",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}",
          "Method": "GET",
          "OperationID": "RoleEligibilityScheduleRequests_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role eligibility schedule request."
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}",
          "Method": "PUT",
          "OperationID": "RoleEligibilityScheduleRequests_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a role eligibility schedule request."
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}",
          "Method": "PUT",
          "OperationID": "RoleEligibilityScheduleRequests_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Creates a role eligibility schedule request."
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests",
            "Method": "GET",
            "OperationID": "RoleEligibilityScheduleRequests_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role eligibility schedule requests for a scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [
          {
            "Name": "Cancel",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel",
            "Method": "POST",
            "OperationID": "RoleEligibilityScheduleRequests_Cancel",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Cancels a pending role eligibility schedule request."
          },
          {
            "Name": "Validate",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/validate",
            "Method": "POST",
            "OperationID": "RoleEligibilityScheduleRequests_Validate",
            "IsLongRunning": false,
            "PagingMetadata": null,
            "Description": "Validates a new role eligibility schedule request."
          }
        ],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleEligibilityScheduleRequest",
        "ResourceType": "Microsoft.Authorization/roleEligibilityScheduleRequests",
        "ResourceKey": "roleEligibilityScheduleRequestName",
        "ResourceKeySegment": "roleEligibilityScheduleRequests",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleManagementPolicy": [
      {
        "Name": "RoleManagementPolicy",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}",
          "Method": "GET",
          "OperationID": "RoleManagementPolicies_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role management policy for a resource scope"
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}",
          "Method": "PATCH",
          "OperationID": "RoleManagementPolicies_Update",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Update a role management policy"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicies",
            "Method": "GET",
            "OperationID": "RoleManagementPolicies_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role management policies for a resource scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleManagementPolicy",
        "ResourceType": "Microsoft.Authorization/roleManagementPolicies",
        "ResourceKey": "roleManagementPolicyName",
        "ResourceKeySegment": "roleManagementPolicies",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ],
    "RoleManagementPolicyAssignment": [
      {
        "Name": "RoleManagementPolicyAssignment",
        "GetOperation": {
          "Name": "Get",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}",
          "Method": "GET",
          "OperationID": "RoleManagementPolicyAssignments_Get",
          "IsLongRunning": false,
          "PagingMetadata": null,
          "Description": "Get the specified role management policy assignment for a resource scope"
        },
        "CreateOperation": {
          "Name": "CreateOrUpdate",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}",
          "Method": "PUT",
          "OperationID": "RoleManagementPolicyAssignments_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create a role management policy assignment"
        },
        "UpdateOperation": {
          "Name": "Update",
          "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}",
          "Method": "PUT",
          "OperationID": "RoleManagementPolicyAssignments_Create",
          "IsLongRunning": true,
          "PagingMetadata": null,
          "Description": "Create a role management policy assignment"
        },
        "ListOperations": [
          {
            "Name": "GetAll",
            "Path": "/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments",
            "Method": "GET",
            "OperationID": "RoleManagementPolicyAssignments_ListForScope",
            "IsLongRunning": false,
            "PagingMetadata": {
              "Method": "ListForScope",
              "ItemName": "value",
              "NextLinkName": "nextLink"
            },
            "Description": "Gets role management assignment policies for a resource scope."
          }
        ],
        "OperationsFromResourceGroupExtension": [],
        "OperationsFromSubscriptionExtension": [],
        "OperationsFromManagementGroupExtension": [],
        "OperationsFromTenantExtension": [],
        "OtherOperations": [],
        "Parents": [
          "ArmResource"
        ],
        "SwaggerModelName": "RoleManagementPolicyAssignment",
        "ResourceType": "Microsoft.Authorization/roleManagementPolicyAssignments",
        "ResourceKey": "roleManagementPolicyAssignmentName",
        "ResourceKeySegment": "roleManagementPolicyAssignments",
        "IsTrackedResource": false,
        "IsTrackedResourceWithOptionalLocation": false,
        "IsManagementGroupResource": false,
        "ScopeType": "Scope",
        "IsSingletonResource": false
      }
    ]
  },
  "RenameMapping": {},
  "OverrideOperationName": {}
}